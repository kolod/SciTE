# Define SciTE settings for other simple files.

file.patterns.props=*.properties;*.abbrev;*.ini;*.inf;*.reg;*.url;*.cfg;*.cnf;*.aut;*.m3u
file.patterns.text=*.txt;*.log;*.lst;*.doc;*.diz;*.nfo
file.patterns.batch=*.bat;*.cmd;*.nt
file.patterns.diff=*.diff;*.patch
file.patterns.make=makefile;Makefile;*.mak;configure*

filter.properties=Properties (ini inf reg url cfg cnf)|$(file.patterns.props)|
filter.text=Text (txt log lst doc diz nfo)|$(file.patterns.text);make*|
filter.batch=Batch (bat cmd nt)|$(file.patterns.batch)|
filter.diff=Difference (diff patch)|$(file.patterns.diff)|

lexer.$(file.patterns.props)=props
lexer.$(file.patterns.batch)=batch
lexer.*.err=errorlist
lexer.$(file.patterns.make)=makefile
lexer.*.iface=makefile
lexer.$(file.patterns.diff)=diff

word.characters.$(file.patterns.text)=$(chars.alpha)$(chars.numeric)$(chars.accented)-'

colour.other.operator=fore:#B06000

# Properties styles

# Default
style.props.0=
# Comment
style.props.1=fore:#007F7F,$(font.comment)
# Section
style.props.2=fore:#7F007F,back:#E0F0F0,eolfilled
# Assignment operator
style.props.3=$(colour.operator)
# Default value (@)
style.props.4=$(colour.preproc)
# Key
style.props.5=fore:#0000FF
# Matched Operators
style.props.34=fore:#0000FF,notbold
style.props.35=fore:#FF0000,notbold

comment.block.props=#~
preprocessor.symbol.$(file.patterns.make)=!
preprocessor.start.$(file.patterns.make)=IF IFDEF IFNDEF
preprocessor.middle.$(file.patterns.make)=ELSE ELSEIF ELSEIFDEF ELSEIFNDEF
preprocessor.end.$(file.patterns.make)=ENDIF

# Batch styles

# List from http://www.easydos.com/dosindex.html
# I limit here the commands to those built in command.com, ie. I don't list external Dos commands
# if [no] (test) (command) -- test is EXIST (filename) | (string1)==(string2) | ERRORLEVEL (number)
# for %%(variable) IN (set) DO (command) -- variable is [a-zA-Z] -- eg for %%X in (*.txt) do type %%X
keywordclass.batch=rem set if exist errorlevel for in do \
break call chcp cd chdir choice cls country ctty date del erase dir echo \
exit goto loadfix loadhigh mkdir md move path pause prompt rename ren \
rmdir rd shift time type ver verify vol \
com con lpt nul \
color copy defined else not start
keywords.$(file.patterns.batch)=$(keywordclass.batch)

# Optional list of external commands to highlight in style 5.
# If not set all commands are highlighted in style 5.
#keywords2.$(file.patterns.batch)=append attrib chkdsk comp diskcomp

# Default
style.batch.0=
# Comment (rem or ::)
style.batch.1=fore:#007F00,$(font.comment)
# Keywords
style.batch.2=$(colour.keyword),bold
# Label (line beginning with ':')
style.batch.3=fore:#FCFC70,back:#448489,eolfilled
# Hide command character ('@')
style.batch.4=$(colour.preproc)
# External commands
style.batch.5=fore:#007090,bold
# Variable: %%x (x is almost whatever, except space and %), %n (n in [0-9]), %EnvironmentVar%
style.batch.6=fore:#800080,back:#DEFDFE
# Operator: * ? < > |
style.batch.7=$(colour.operator)

comment.block.batch=REM ~

# Makefile styles

# Default
style.makefile.0=
# Comment: #
style.makefile.1=fore:#008000,$(font.comment)
# Pre-processor or other comment: !
style.makefile.2=$(colour.preproc)
# Variable: $(x)
style.makefile.3=fore:#000080
# Operator
style.makefile.4=$(colour.other.operator)
# Target
style.makefile.5=fore:#A00000
# Error
style.makefile.9=$(colour.error),eolfilled
# Matched Operators
style.makefile.34=fore:#0000FF,notbold
style.makefile.35=fore:#FF0000,notbold

comment.block.makefile=#~

# Error list styles

style.errorlist.32=$(font.small)
# Default
style.errorlist.0=fore:#660000
# python Error
style.errorlist.1=fore:#FF0000
# gcc Error
style.errorlist.2=fore:#FF0000,bold
# Microsoft Error
style.errorlist.3=fore:#FF0000
# command or return status
style.errorlist.4=fore:#0000FF
# Borland error and warning messages
style.errorlist.5=fore:#FF0000
# perl error and warning messages
style.errorlist.6=fore:#FF0000
# .NET tracebacks
style.errorlist.7=fore:#FF0000
# Lua error and warning messages
style.errorlist.8=fore:#FF0000
# ctags
style.errorlist.9=fore:#FF00FF
# diff changed !
style.errorlist.10=fore:#007F00
# diff addition +
style.errorlist.11=fore:#00007F
# diff deletion -
style.errorlist.12=fore:#007F7F
# diff message ---
style.errorlist.13=fore:#990066
# PHP error
style.errorlist.14=fore:#FF0000
# Essential Lahey Fortran 90 error
style.errorlist.15=fore:#FF0000
# Intel Fortran Compiler error
style.errorlist.16=fore:#FF0000
# Intel Fortran Compiler v8.0 error/warning
style.errorlist.17=fore:#FF0000
# Absoft Pro Fortran 90/95 v8.2 error or warning
style.errorlist.18=fore:#FF0000
# HTML Tidy
style.errorlist.19=fore:#FF0000
# Java runtime stack trace
style.errorlist.20=fore:#FF0000
# Ensures that spacing is not affected by line number styles
style.errorlist.33=$(font.small)

# Стиль для выделения искомой подстроки в строках результата поиска по файлам (Доступно только в SciTE-Ru)
style.errorlist.30=fore:#FF0000
# Отключить данную возможность
#lexer.errorlist.findliststyle=0

# Difference styles

# Default
style.diff.0=
# Comment (part before "diff ..." or "--- ..." and , Only in ..., Binary file...)
style.diff.1=fore:#007F00
# Command (diff ...)
style.diff.2=fore:#7F7F00
# Source file (--- ...) and Destination file (+++ ...)
style.diff.3=fore:#7F0000
# Position setting (@@ ...)
style.diff.4=fore:#7F007F
# Line removal (-...)
style.diff.5=fore:#007F7F
# Line addition (+...)
style.diff.6=fore:#00007F

command.build.makefile=make
command.build.*.mak=make

if PLAT_WIN
	command.go.$(file.patterns.batch)=$(FileNameExt)

	command.name.1.*.mak=nmake
	command.1.*.mak=nmake -f $(FileNameExt)

	command.help.$(file.patterns.batch)=команда $(CurrentWord)!%WINDIR%\Help\MUI\0419\ntcmds.chm
	command.help.subsystem.$(file.patterns.batch)=4

	# ----------------------------------------------
	command.name.4.$(file.patterns.batch)=Execute Selection
	command.4.$(file.patterns.batch)=CMD /C MORE > %TEMP%\tmp.$(FileExt) && "$(SciteDefaultHome)\scite.exe" -menucommand:420 && CALL %TEMP%\tmp.$(FileExt) %% IF NOT ERRORLEVEL 1 DEL %TEMP%\tmp.$(FileExt)
	command.input.4.$(file.patterns.batch)=$(CurrentSelection)
	command.mode.4.$(file.patterns.batch)=subsystem:console,savebefore:no
	# ----------------------------------------------

	command.name.5.$(file.patterns.batch)=HELP (console)
	command.5.$(file.patterns.batch)=CMD /C $(CurrentSelection) /?
	command.mode.5.$(file.patterns.batch)=subsystem:console,savebefore:no
	command.shortcut.5.$(file.patterns.batch)=Shift+F1

	# Вызов поиска выделенного слова по русскому файлу справки
	command.help.*.properties="$(SciteDefaultHome)\tools\html_HELP.hta" "$(SciteDefaultHome)\doc\SciTEDoc_rus.html" "$(CurrentSelection)"
	command.help.subsystem.*.properties=2

	# Вызов поиска выделенного слова по оригинальному (английскому) файлу справки
	command.separator.19=1
	command.name.19.*.properties=SciTE HELP (english)
	command.19.*.properties=wscript "$(SciteDefaultHome)\tools\html_HELP.hta" "$(SciteDefaultHome)\doc\SciTEDoc.html" "$(CurrentSelection)"
	command.mode.19.*.properties=subsystem:windows,replaceselection:no,savebefore:no,quiet:yes
	command.shortcut.19.*.properties=Shift+F1

	# ----------------------------------------------
	file.patterns.used.numeric.values=*.properties;*.ini;*.bar
	command.name.3.$(file.patterns.used.numeric.values)=Increase number of items
	command.3.$(file.patterns.used.numeric.values)=dostring delta=1 dofile(props["SciteDefaultHome"].."\\tools\\MoveMenuItem.lua")
	command.mode.3.$(file.patterns.used.numeric.values)=subsystem:lua,savebefore:no
	command.shortcut.3.$(file.patterns.used.numeric.values)=Alt+Shift+Up

	command.name.4.$(file.patterns.used.numeric.values)=Decrease number of items
	command.4.$(file.patterns.used.numeric.values)=dostring delta=-1 dofile(props["SciteDefaultHome"].."\\tools\\MoveMenuItem.lua")
	command.mode.4.$(file.patterns.used.numeric.values)=subsystem:lua,savebefore:no
	command.shortcut.4.$(file.patterns.used.numeric.values)=Alt+Shift+Down
	# ----------------------------------------------

	command.separator.5=1
	command.name.5.*.properties=Value of variable SciTE
	command.5.*.properties=dofile $(SciteDefaultHome)\tools\value.lua
	command.mode.5.*.properties=subsystem:lua,savebefore:no
	command.shortcut.5.*.properties=Alt+V

    # ----------------------------------------------
	command.name.5.*.ses=Convert session file
	command.5.*.ses=dofile $(SciteDefaultHome)\tools\session-converter.lua
	command.mode.5.*.ses=subsystem:lua,savebefore:no

# =========================================================
# Подключение файла сокращений только для данного языка
abbreviations.$(file.patterns.batch)=$(SciteDefaultHome)\abbrev\batch.abbrev

# Подключение файла автодополнения и всплывающих подсказок по синтаксису
api.$(file.patterns.batch)=$(SciteDefaultHome)\api\batch.api
api.*.properties=$(SciteDefaultHome)\api\props.api

# Подключение AutocompleteObject.lua:
# Ввод разделителя, заданного в autocomplete.[lexer].start.characters вызывает список свойств и медодов объекта из заданного api файла
api.batch=$(SciteDefaultHome)\api\batch.api
api.props=$(SciteDefaultHome)\api\props.api

# Символы, после ввода которых, возникает список автодополнения
autocomplete.batch.start.characters=
autocomplete.props.start.characters=.:

# Символы, после ввода которых возникает подсказка
calltip.batch.parameters.start= 
calltip.props.parameters.start= 
# Символы - разделители параметров
calltip.batch.parameters.separators= 

# Символы, из которых строятся операторы языка (используется для всплывающей подсказки)
calltip.batch.word.characters=$(chars.alpha)$(chars.numeric)_-:.~%
calltip.props.word.characters=$(chars.alpha)$(chars.numeric)_-:.

##### WoW API Version: 2.0. Compiled by VladVRO
AbandonQuest ()  /WoW API/\n  Abandon the specified quest
AbandonSkill (index)  /WoW API/\n  The player abandons a skill
AcceptAreaSpiritHeal ()  /WoW API/\n  Accept a spirit heal
AcceptBattlefieldPort (index[, acceptFlag])  /WoW API/\n  Accept or reject an offered battlefield port
AcceptDuel ()  /WoW API/\n  The player accepts the challenge to duel
AcceptGroup ()  /WoW API/\n  Accept the invitation to party
AcceptGuild ()  /WoW API/\n  The player accepts the invitation to join a guild
AcceptQuest ()  /WoW API/\n  Accept the specified quest
AcceptResurrect ()  /WoW API/\n  The player accepts the request from another player to resurrect him/herself
AcceptSkillUps ()  /WoW API/
AcceptTrade ()  /WoW API/\n  A pending trade will be accepted
AcceptXPLoss ()  /WoW API/\n  Accept the XP loss to be reborn by a spirit healer (The name is somewhat of a misnomer, since it's now durability rather than XP that is lost)
ActionHasRange (slot)  /WoW API/\n  Determine if the specified action is a range restriction (1 if yes, nil if no)
AddChatWindowChannel (chatFrameIndex, "channel")  /WoW API/\n  Make a chat channel visible in a specific ChatFrame
AddChatWindowMessages ()  /WoW API/\n  Adds a messaging group to the specified chat window
AddFriend ("playerName")  /WoW API/\n  Add a friend to your friend list
AddIgnore ("name")  /WoW API/\n  Add a player to your ignore list
AddOrDelIgnore ("name")  /WoW API/\n  Toggles the ignore state of the specified name
AddQuestWatch (x)  /WoW API/\n  Add a quest to the watch list
AddSkillUp (index)  /WoW API/
AddTradeMoney ()  /WoW API/\n  Adds the money dropped into the player's trade frame
AppendToFile ()  /WoW API/
ArenaTeamInviteByName (teamIndex, playerName)  /WoW API/\n  Invites the specified player to the specified arena team
ArenaTeamLeave (teamIndex)  /WoW API/\n  Leaves the specified arena team
ArenaTeamRoster (teamIndex)  /WoW API/\n  Sends a request to the server to request the most recent information on a specific Arena Team that you are in
ArenaTeamUninviteByName (teamIndex, playerName)  /WoW API/\n  Removes the specified played from the specified arena team
AscendStop ()  /WoW API/ PROTECTED\n  Called when you release the jump key
AssistUnit ("unit")  /WoW API/ PROTECTED\n  Instructs your character to assist the specified unit
AttackTarget ()  /WoW API/ PROTECTED\n  Attacks the targetted unit
AutoEquipCursorItem ()  /WoW API/\n  Causes the equipment on the cursor to be equipped
BankButtonIDToInvSlotID (buttonID, isBag)  /WoW API/\n  Returns the ID number of a bank button or bag in terms of inventory slot ID
BeginTrade ()  /WoW API/\n  Begins the trade with the target
BindEnchant ()  /WoW API/\n  Confirm the binding of the item when enchanting
BuyGuildCharter ("guildName")  /WoW API/\n  Purchases a guild charter for guildName
BuyMerchantItem (index[, qty])  /WoW API/\n  Buys an item from a merchant
BuyRandomPicks (count)  /WoW API/\n  ?   - Added in 1.12
BuySkillTier (index)  /WoW API/
BuyStableSlot ()  /WoW API/
BuyTrainerService (index)  /WoW API/\n  Used for buying new/upgrading professions, profession items and class skills
BuybackItem (index)  /WoW API/\n  Buys back a sold item
CalculateAuctionDeposit (runTime)  /WoW API/\n  Returns the required deposit for the current selling item given the specified duration (minutes)
CameraOrSelectOrMoveStart ()  /WoW API/ PROTECTED\n  Begin "Left click" in the 3D world. (1.10 - Protected)
CameraOrSelectOrMoveStop ([stickyFlag])  /WoW API/ PROTECTED\n  End "Left click" in the 3D world. (1.10 - Protected)
CameraZoomIn (increment)  /WoW API/\n  Zooms the camera into the viewplane by increment
CameraZoomOut (increment)  /WoW API/\n  Zooms the camera out of the viewplane by increment
CanEditGuildInfo ()  /WoW API/\n  Returns true if you are allowed to edit the guild info
CanEditMOTD ()  /WoW API/\n  Returns true if you are allowed to edit the guild motd
CanEditOfficerNote ()  /WoW API/\n  Returns true if you are allowed to edit a guild member's officer note
CanEditPublicNote ()  /WoW API/\n  Returns true if you are allowed to edit a guild member's public note
CanGuildDemote ()  /WoW API/\n  Returns true if you are allowed to demote a guild member
CanGuildInvite ()  /WoW API/\n  Returns true if you are allowed to invite a new member to the guild
CanGuildPromote ()  /WoW API/
CanGuildRemove ()  /WoW API/\n  Returns true if you are allowed to remove a guild member
CanJoinBattlefieldAsGroup ()  /WoW API/\n  returns nil if the player can not do a group join for a battlefield
CanMerchantRepair ()  /WoW API/\n  Returns true if the merchant can repair items
CanSendAuctionQuery ()  /WoW API/\n  Return 1 if auction search button would be active, nil otherwise
CanShowResetInstances ()  /WoW API/\n  Determine if player can reset instances at the moment
CanSignPetition ()  /WoW API/
CanViewOfficerNote ()  /WoW API/\n  Returns true if you are allowed to view a Officer Note
CancelAreaSpiritHeal ()  /WoW API/\n  Cancel a spirit heal
CancelAuction (index)  /WoW API/\n  Cancel the specified auction (on the "owner" list)
CancelDuel ()  /WoW API/\n  Refuse the invitation to fight a duel
CancelLogout ()  /WoW API/
CancelMeetingStoneRequest ()  /WoW API/\n  Remove character from an instance's Meeting Stone queue
CancelPendingEquip (index)  /WoW API/\n  This function is used to cancel a pending equip
CancelPlayerBuff (id or "name"[,"rank"])  /WoW API/\n  Removes a specific buff from the player
CancelSkillUps ()  /WoW API/
CancelTrackingBuff ()  /WoW API/\n  Cancels your current tracking buff (Find Minerals etc.)
CancelTrade ()  /WoW API/\n  Declines the offer to trade with the other player
CancelTradeAccept ()  /WoW API/\n  Cancels the trade attempt which required an accept
CastPetAction (index)  /WoW API/ PROTECTED\n  Cast the corresponding pet skill
CastShapeshiftForm (index)  /WoW API/ PROTECTED
CastSpell (spellID, "bookType")  /WoW API/ PROTECTED\n  Cast the specified spell by ID. spellbookTab is "spell" or "pet". As of patch 2.0, this function has been restricted to Blizzard signed UI mods.\n  Note: You can still use this function to open Craft windows and activate Lock Picking
CastSpellByName ("name"[, onSelf])  /WoW API/ PROTECTED\n  Cast the specified spell by display name. As of patch 2.0, this function has been restricted to Blizzard signed UI mods.\n  Note: You can still use this function to open Craft windows and activate Lock Picking
ChangeActionBarPage ()  /WoW API/\n  Changes the current action bar page
ChangeChatColor (chatType, r, g, b)  /WoW API/\n  Update the color for a type of chat message
ChannelBan ("channel", "name")  /WoW API/\n  Bans a player from the specified channel
ChannelInvite ("channel", "name")  /WoW API/\n  Invites the specified user to the channel
ChannelKick ("channel", "name")  /WoW API/\n  Kicks the specified user from the channel
ChannelModerate ("channel")  /WoW API/\n  Enables channel Moderation commands such as ChannelKick/Ban
ChannelModerator ("channel", "name")  /WoW API/\n  Sets the specified player as the channel moderator
ChannelMute ("channel", "name")  /WoW API/\n  Turns off the specified player's ability to speak in a channel
ChannelToggleAnnouncements ("channel")  /WoW API/\n  Toggles the channel to display announcements either on or off
ChannelUnban ("channel", "name")  /WoW API/\n  Unbans a player from a channel
ChannelUnmoderator ("channel", "name")  /WoW API/\n  Takes the specified user away from the moderator status
ChannelUnmute ("channel", "name")  /WoW API/\n  Unmutes the specified user from the channel
CheckBinderDist ()  /WoW API/\n  Check wether the player is close enough to interact with the Hearthstone binder
CheckInbox ()  /WoW API/\n  Populate client's inbox with mail from server
CheckInteractDistance ("unit", distIndex)  /WoW API/
CheckPetUntrainerDist ()  /WoW API/\n  Check wether the player is close enough to the pet untrainer
CheckReadyCheckTime ()  /WoW API/\n  Unknown, called from UIParent's OnUpdate!
CheckSpiritHealerDist ()  /WoW API/\n  Return true if you are in range with spirit healer while dead
CheckTalentMasterDist ()  /WoW API/
ClearCursor ()  /WoW API/\n  Clears whatever item the cursor is dragging from the cursor.   - Added in 1.12
ClearInspectPlayer ()  /WoW API/\n  Reset inspect data once finished with it (Called on inspect window hide)
ClearOverrideBindings (owner)  /WoW API/\n  Reset all overrides belonging to an owner
ClearSendMail ()  /WoW API/\n  This clears the text in the send mail tab and places the COD item in the inventory
ClearTarget ()  /WoW API/ PROTECTED\n  Clears the selected target
ClearTutorials ()  /WoW API/
ClickAuctionSellItemButton ()  /WoW API/\n  Puts the currently 'picked up' item into the 'create auction' slot
ClickSendMailItemButton ()  /WoW API/\n  This seems to just simulate a click on the send item mail slot (will pickup the item there)
ClickStablePet (index)  /WoW API/
ClickTargetTradeButton (index)  /WoW API/
ClickTradeButton (index)  /WoW API/\n  Equivalent of a mouseclick on the trade window buttons [1-7]
CloseAuctionHouse ()  /WoW API/\n  Will close the AuctionFrame if opened
CloseBankFrame ()  /WoW API/\n  Close the bank frame if it's open
CloseBattlefield ()  /WoW API/
CloseCraft ()  /WoW API/
CloseGossip ()  /WoW API/\n  Dismiss the gossip window
CloseGuildRegistrar ()  /WoW API/
CloseGuildRoster ()  /WoW API/
CloseItemText ()  /WoW API/\n  Close an open item text (book, plaque, etc)
CloseLoot ([uiFailedFlag])  /WoW API/
CloseLottery ()  /WoW API/\n  ?   - Added in 1.12
CloseMail ()  /WoW API/\n  Closes the mail window
CloseMerchant ()  /WoW API/\n  Closes the merchant window
ClosePetStables ()  /WoW API/\n  Close the pet stables user interface
ClosePetition ()  /WoW API/
CloseQuest ()  /WoW API/
CloseTabardCreation ()  /WoW API/
CloseTaxiMap ()  /WoW API/\n  Closes the Flightpath Map
CloseTrade ()  /WoW API/\n  Closes the trade
CloseTradeSkill ()  /WoW API/\n  Closes an open trade skill window
CloseTrainer ()  /WoW API/\n  Closes the trainer window
CollapseCraftSkillLine (index)  /WoW API/
CollapseFactionHeader (index)  /WoW API/\n  Collapse a faction header row
CollapseQuestHeader ()  /WoW API/\n  Collapses a quest header
CollapseSkillHeader (index)  /WoW API/
CollapseTradeSkillSubClass (index)  /WoW API/\n  Collapses the specified subclass header row
CollapseTrainerSkillLine (index)  /WoW API/\n  Collapses a header, hiding all spells below it
CompleteQuest ()  /WoW API/\n  Complete the specified quest
ConfirmAcceptQuest ()  /WoW API/\n  Accept the quest. Yes. Really accept it
ConfirmBindOnUse ()  /WoW API/
ConfirmBinder ()  /WoW API/\n  Confirm the request to set the binding of the player's Hearthstone
ConfirmLootRoll (slot)  /WoW API/\n  Confirm a loot roll (NEW IN 1300)
ConfirmLootSlot (slot)  /WoW API/\n  Confim looting of a BoP item
ConfirmPetUnlearn ()  /WoW API/\n  Confirm the request for unlearning pet abilities
ConfirmReadyCheck (isReady)  /WoW API/\n  Indicate if you are ready or not
ConfirmSummon ()  /WoW API/
ConfirmTalentWipe ()  /WoW API/
ConsoleExec ("command")  /WoW API/\n  Execute a console command
ContainerIDToInventoryID (bagID)  /WoW API/
ConvertToRaid ()  /WoW API/\n  Converts party to raid
CreateFont ("name")  /WoW API/\n  Dynamically create a font object
CreateFrame ("frameType"[ ,"name"][, parent][, "inheritFrame"])  /WoW API/\n  Create a new frame of the specified type
CreateMacro ("name", icon, "body", local)  /WoW API/\n  Create a new macro. (2.0 - Can not be used in combat)
CreateWorldMapArrowFrame ("frame")  /WoW API/\n  create a arrow cursor for the player position and orientation
CursorCanGoInSlot (invSlot)  /WoW API/\n  Return true if the item currently held by the cursor can go into the given inventory (equipment) slot
CursorHasItem ()  /WoW API/\n  Returns true if the cursor currently holds an item
CursorHasMacro ()  /WoW API/\n  Returns 1 or nil. (New 2.0.3)
CursorHasMoney ()  /WoW API/\n  true/false
CursorHasSpell ()  /WoW API/\n  true/false
DeclineGroup ()  /WoW API/\n  Decline the invitation to a party
DeclineGuild ()  /WoW API/
DeclineQuest ()  /WoW API/\n  Declines the currently offered quest
DeclineResurrect ()  /WoW API/\n  Decline the request from another player to resurect him/herself
DelIgnore ("name")  /WoW API/\n  Delete a player from your ignore list
DeleteCursorItem ()  /WoW API/
DeleteFile ()  /WoW API/
DeleteGMTicket ()  /WoW API/
DeleteInboxItem (index)  /WoW API/\n  Deletes the inbox item at index. It returns immediately, it does not seem to wait for the deletion to go through,\n  giving the normal problems with rapid mail removal attempts
DeleteMacro (id|"name")  /WoW API/\n  Deletes a macro
DemoteAssistant ("unit")  /WoW API/\n  Demotes player from assistant status. Requires raid leadership
DisableAddOn (index or "AddOnName")  /WoW API/\n  Disable the specified AddOn for subsequent sessions
DisableAllAddOns ()  /WoW API/\n  Disable all AddOns for subsequent sessions
Dismount ()  /WoW API/\n  The player Dismount the current mount. (NEW 2.0.3)
DisplayChannelOwner ("channel")  /WoW API/\n  Displays the owner of the specified channel in the default chat
DoCraft (index)  /WoW API/
DoEmote ("emote"[, "target"])  /WoW API/\n  Perform a voice emote, optionally at a specific target
DoReadyCheck ()  /WoW API/\n  Initiate a ready check
DoTradeSkill (index[, repeatTimes])  /WoW API/\n  Performs the tradeskill a specified # of times
DrawRouteLine (texture, canvas, startx, starty, endx, endy, width, relPoint)  /WoW API/\n  Draws a line
DropCursorMoney ()  /WoW API/\n  Drops the amount of money held by the cursor
DropItemOnUnit ("unit")  /WoW API/\n  Drops an item from the cursor onto a unit
EditMacro (index, "name", iconIndex, "body", local)  /WoW API/\n  Saves a macro. (2.0 - Can not be used in combat)
EnableAddOn (index or "AddOnName")  /WoW API/\n  Enable the specified AddOn for subsequent sessions
EnableAllAddOns ()  /WoW API/\n  Enable all AddOns for subsequent sessions
EnumerateFrames (currentFrame)  /WoW API/\n  Get the Frame which follows currentFrame
EnumerateServerChannels ()  /WoW API/\n  Retrieves all available server channels (zone dependant)
EquipCursorItem (invSlot)  /WoW API/
EquipItemByName ("name" [,slot])  /WoW API/\n  Equips an item by its name, optionally into a specified slot
EquipPendingItem (invSlot)  /WoW API/\n  Equips the currently pending Bind-on-Equip or Bind-on-Pickup item from the specified inventory slot. (Internal - do not use)
ExpandCraftSkillLine (index)  /WoW API/
ExpandFactionHeader (index)  /WoW API/\n  Expand a faction header row
ExpandQuestHeader ()  /WoW API/\n  Expands a quest header
ExpandSkillHeader (index)  /WoW API/
ExpandTradeSkillSubClass (index)  /WoW API/\n  Expands the specified subclass header row
ExpandTrainerSkillLine (index)  /WoW API/\n  Expands a header, showing all spells below it
FactionToggleAtWar (index)  /WoW API/\n  Toggle the At War flag for a faction
FlagTutorial ("tutotial")  /WoW API/
FlipCameraYaw (degrees)  /WoW API/\n  Rotates the camera about the Z-axis by the angle amount specified in degrees
FocusUnit ("unit")  /WoW API/ PROTECTED\n  Sets your unit for focus. -- Protected with Patch 2.0!
FollowByName ("name"[, exactMatch])  /WoW API/\n  Follow a player with the specified player name. (2.0.1 - Removed)
FollowUnit ("unit")  /WoW API/\n  Follow an ally with the specified UnitID
ForceLogout ()  /WoW API/ PROTECTED
ForceQuit ()  /WoW API/
FrameXML_Debug (flag)  /WoW API/\n  Sets FrameXML logging state which is output to /WoW Folder/Logs/FrameXML.log
GMRequestPlayerInfo ()  /WoW API/\n  access denied (darn)
GMSurveyAnswerSubmit (question, rank, comment)  /WoW API/
GMSurveyCommentSubmit (comment)  /WoW API/
GMSurveyQuestion ()  /WoW API/
GMSurveySubmit ()  /WoW API/
GetAbandonQuestName ()  /WoW API/\n  Gets the name of a quest while it is being abandoned
GetActionBarPage ()  /WoW API/\n  Return the current action bar page. CURRENT_ACTIONBAR_PAGE is obsolete
GetActionBarToggles ()  /WoW API/\n  Return the toggles for each action bar
GetActionCooldown (slot)  /WoW API/\n  This returns the cooldown values of the specified action.
GetActionCount (slot)  /WoW API/\n  Get the count (bandage/potion/etc) for an action, returns 0 if none or not applicable
GetActionInfo (slot)  /WoW API/\n  Returns type, id, subtype
GetActionSelfCastKey ()  /WoW API/
GetActionText (slot)  /WoW API/\n  Get the text label (macros, etc) for an action, returns nil if none
GetActionTexture (slot)  /WoW API/\n  Gets the texture path for the specified action
GetActiveLevel (index)  /WoW API/\n  Gets the level of an active quest (only available after QUEST_GREETING event)
GetActiveTitle (index)  /WoW API/\n  Gets the title of an active quest (only available after QUEST_GREETING event)
GetAddOnDependencies (index or "AddOnName")  /WoW API/\n  Get dependency list for an AddOn
GetAddOnInfo (index or "AddOnName")  /WoW API/\n  Get information about an AddOn
GetAddOnMetadata (index or "name", "variable")  /WoW API/\n  Retrieve metadata from addon's TOC file
GetAdjustedSkillPoints ()  /WoW API/
GetAreaSpiritHealerTime ()  /WoW API/\n  Returns the time left until the next resurrection by the Sprit Guide
GetArenaCurrency ()  /WoW API/\n  Gets the amount of arena points a player currently has to spend
GetArenaTeam (teamIndex)  /WoW API/\n  Returns information regarding the players arena team, nil if the player is not in the passed team
GetArenaTeamRosterInfo (teamIndex, playerIndex)  /WoW API/\n  Returns information regarding a player from the specified team,\n  this requires a call to ArenaTeamRoster you only need to do this when the player logins in, UI reloads will not effect the return
GetAuctionHouseDepositRate ()  /WoW API/\n  Returns the deposit rate (percentage) for the currently open auction house (Possibly out-dated by CalculateAuctionDeposit)
GetAuctionInvTypes (classIndex, subclassIndex)  /WoW API/\n  Returns types of subcategories items
GetAuctionItemClasses ()  /WoW API/\n  Returns major auction item categories
GetAuctionItemInfo ("type", index)  /WoW API/\n  Returns details about the specified auction item
GetAuctionItemLink ("type", index)  /WoW API/\n  Returns an itemLink for the specified auction item
GetAuctionItemSubClasses (classIndex)  /WoW API/\n  Returns subcategories in the nth auction category
GetAuctionItemTimeLeft ("type", index)  /WoW API/\n  Returns the time left status of the specified auction item
GetAuctionSellItemInfo ()  /WoW API/\n  Returns information about the current selling item (or nil if none selected)
GetAutoLootDefault ()  /WoW API/\n  Returns nil or 1
GetAutoLootToggleKey ()  /WoW API/
GetAvailableLevel (index)  /WoW API/\n  Gets the level of an available quest (only available after QUEST_GREETING event)
GetAvailableTitle (index)  /WoW API/\n  Gets the title of an available quest (only available after QUEST_GREETING event)
GetBagName (bagID)  /WoW API/\n  Get the name of one of the player's bags
GetBankSlotCost (numSlots)  /WoW API/\n  Returns the cost of the next bank slot
GetBaseMip ()  /WoW API/\n  Get the world appearance Texture Detail
GetBattlefieldEstimatedWaitTime (index)  /WoW API/\n  Get the estimated wait for entry into the battlefield
GetBattlefieldFlagPosition (index)  /WoW API/\n  Get the map position of the flag
GetBattlefieldInfo (index)  /WoW API/\n  Returns detailed information on the Battlefield you last opened a queue window for
GetBattlefieldInstanceExpiration ()  /WoW API/\n  Get shutdown timer for the battlefield instance
GetBattlefieldInstanceInfo (index)  /WoW API/\n  Get the instance ID for a battlefield
GetBattlefieldInstanceRunTime ()  /WoW API/\n  In milliseconds, the time since battleground started. (seems to be queried from server because it is not in sync with time ()  /WoW API/)
GetBattlefieldPortExpiration (index)  /WoW API/\n  Get the remaining milliseconds before the battlefield port expires
GetBattlefieldPosition (index)  /WoW API/\n  Get the map position and name of a player in the battleground not in your raid
GetBattlefieldScore (index)  /WoW API/\n  Get score information about a player
GetBattlefieldStatData (playerIndex, slotIndex)  /WoW API/\n  Get information for a player from a column thats specific to a battleground. (like Warsong Gulch flag captures)
GetBattlefieldStatInfo (index)  /WoW API/\n  Get the battleground specific column for the score board
GetBattlefieldStatus (index)  /WoW API/\n  Get the battlefield's current status
GetBattlefieldTeamInfo (index)  /WoW API/\n  Gets info about a registered Arena Team at the end of an arena match
GetBattlefieldTimeWaited (index)  /WoW API/\n  Get time waited in queue in milliseconds
GetBattlefieldWinner ()  /WoW API/\n  Get the battlefields winner
GetBidderAuctionItems ([page])  /WoW API/
GetBillingTimeRested ()  /WoW API/
GetBindLocation ()  /WoW API/\n  Get the name of the location for your Hearthstone
GetBinding (index)  /WoW API/\n  Get action and key bindings for that index
GetBindingAction ("KEY" [,checkOverride])  /WoW API/\n  Get the action bound to that key
GetBindingKey ("command")  /WoW API/\n  Get the key(s) bound to that action
GetBlockChance ()  /WoW API/\n  Returns the player's percentage block chance
GetBonusBarOffset ()  /WoW API/\n  Determine which page of bonus actions to show
GetBuildInfo ()  /WoW API/\n  Returns information about current client build
GetBuybackItemInfo (index)  /WoW API/\n  Returns information about a buyback item
GetCVar ("varname")  /WoW API/\n  Get the current (active) setting for a variable in config.wtf
GetCVarDefault ("varname")  /WoW API/
GetChannelList ()  /WoW API/\n  Retrieves joined channels
GetChannelName ("channel" or index)  /WoW API/\n  Retrieves the name from a specific channel
GetChatTypeIndex (type)  /WoW API/\n  Get the numeric ID of a type of chat message
GetChatWindowChannels (index)  /WoW API/\n  Get the chat channels received by a chat window
GetChatWindowInfo (index)  /WoW API/\n  Get setup information about a chat window
GetChatWindowMessages (index)  /WoW API/\n  Get the chat message types received by a chat window
GetCoinIcon (amount)  /WoW API/
GetCombatRating ()  /WoW API/\n  Returns the player's combat rating for a particular combat rating. New as of TBC patch
GetCombatRatingBonus ()  /WoW API/\n  Returns the player's combat rating bonus for a particular combat rating. New as of TBC patch
GetComboPoints ()  /WoW API/\n  Get the current number of combo points
GetContainerItemCooldown (bagID, slot)  /WoW API/
GetContainerItemInfo (bagID, slot)  /WoW API/\n  Get the info for an item in one of the player's bags
GetContainerItemLink (bagID, slot)  /WoW API/\n  Returns the itemLink of the item located in bag#, slot#
GetContainerNumSlots (bagID)  /WoW API/\n  Gives you the number of slots available in the bag specified by the index
GetCorpseMapPosition ()  /WoW API/\n  Returns the position of the corpse on the current world map
GetCorpseRecoveryDelay ()  /WoW API/\n  Time left before a player can accept a resurrection
GetCraftButtonToken ()  /WoW API/
GetCraftDescription (index)  /WoW API/
GetCraftDisplaySkillLine ()  /WoW API/
GetCraftIcon (index)  /WoW API/
GetCraftInfo (index)  /WoW API/
GetCraftItemLink (index)  /WoW API/\n  Returns an itemLink for the specified craftable item
GetCraftName ()  /WoW API/
GetCraftNumReagents (index)  /WoW API/
GetCraftReagentInfo (index, reagentIndex)  /WoW API/
GetCraftReagentItemLink (index, reagentIndex)  /WoW API/\n  Returns an itemLink for one of the reagents needed to craft the given item
GetCraftSelectionIndex ()  /WoW API/
GetCraftSkillLine ()  /WoW API/
GetCraftSpellFocus (index)  /WoW API/
GetCritChance ()  /WoW API/\n  Returns the player's melee critical hit chance
GetCurrentBindingSet ()  /WoW API/\n  Queries if current set of key bindings is character or account specific
GetCurrentDungeonDifficulty ()  /WoW API/\n  Returns the player's current Dungeon Difficulty setting (1-3)
GetCurrentMapContinent ()  /WoW API/\n  Returns the number of the continent the world map is currently showing
GetCurrentMapZone ()  /WoW API/\n  Returns the number of the zone the world map is currently showing
GetCurrentMultisampleFormat ()  /WoW API/\n  Get the current in-use multi-sample (antialias) format
GetCurrentResolution ()  /WoW API/\n  Get the index of the current screen resolution
GetCurrentTitle ()  /WoW API/\n  Returns the player's current title id
GetCursorInfo ()  /WoW API/
GetCursorMoney ()  /WoW API/\n  Returns the amount of money held by the cursor
GetCursorPosition ()  /WoW API/\n  Returns the cursor's position on the screen
GetDamageBonusStat ()  /WoW API/\n  returns index of which stat a player receives a damage bonus from increasing
GetDebugStats ()  /WoW API/
GetDefaultLanguage ("unit")  /WoW API/\n  Returns the default language that the unit is speaking after logon
GetDodgeChance ()  /WoW API/\n  Returns the player's percentage dodge chance
GetDoodadAnim ()  /WoW API/\n  ???
GetFactionInfo (index)  /WoW API/\n  Gets details for a specific faction/faction header
GetFarclip ()  /WoW API/\n  Get the world appearance Terrain Distance
GetFirstTradeSkill ()  /WoW API/\n  Returns the index of the first non-header trade skill entry
GetFramerate ()  /WoW API/\n  Returns the current framerate (full precision)
GetFriendInfo (index)  /WoW API/\n  Returns name, level, class, location and status of a friend
GetGMStatus ()  /WoW API/
GetGMTicket ()  /WoW API/
GetGMTicketCategories ()  /WoW API/\n  Return all available ticket categories (not as a table)
GetGameTime ()  /WoW API/\n  Returns the time in-game
GetGamma ()  /WoW API/
GetGossipActiveQuests ()  /WoW API/\n  Retrieves a list of the active (?) quests on the NPC you are talking to
GetGossipAvailableQuests ()  /WoW API/\n  Retrieves a list of the available (!) quests on the NPC you are talking to
GetGossipOptions ()  /WoW API/\n  Retrieves a list of the available gossip items on the NPC you are talking to
GetGossipText ()  /WoW API/\n  Retrieves the gossip text
GetGreetingText ()  /WoW API/
GetGuildCharterCost ()  /WoW API/\n  Returns the cost of purchasing a guild charter
GetGuildInfo ("unit")  /WoW API/\n  This function returns the name of the guild unit belongs to
GetGuildInfoText ()  /WoW API/\n  Returns the persistant Guild Information data. (new in 1.9)
GetGuildRosterInfo (index)  /WoW API/\n  This function is used to get info on members in the guild
GetGuildRosterLastOnline (index)  /WoW API/\n  Returns time since last online for indexth member in current sort order
GetGuildRosterMOTD ()  /WoW API/\n  Returns guild's MOTD
GetGuildRosterSelection ()  /WoW API/\n  Returns the index of the current selected guild member
GetGuildRosterShowOffline ()  /WoW API/\n  Returns true if showing offline members of the guild
GetHonorCurrency ()  /WoW API/\n  Gets the amount of honor points the player currently has to spend
GetIgnoreName (index)  /WoW API/\n  Get the name of the player on your ignore list at index
GetInboxHeaderInfo (index)  /WoW API/\n  Returns information about a message in the inbox
GetInboxInvoiceInfo (index)  /WoW API/\n  Returns informations about an auction house invoice. It also reads the inbox item, thus reducing its timeout to <= 3 days
GetInboxItem (index)  /WoW API/\n  Returns description of the attachment attached to message at (index)
GetInboxItemLink (index)  /WoW API/\n  Returns link of the attachment attached to message at (index)
GetInboxNumItems ()  /WoW API/\n  Returns the number of messages in your inbox
GetInboxText (index)  /WoW API/\n  Returns the message text of message at (index). It also reads the inbox item, thus reducing its timeout to <= 3 days
GetInspectHonorData ()  /WoW API/\n  Return honor info for the inspected unit (if available)
GetInspectPVPRankProgress ()  /WoW API/\n  Return rank progress for the inspected unit (if available). Ranges from 0 to 1
GetInstanceBootTimeRemaining ()  /WoW API/   Gets the time in seconds after which the player will be ejected from an instance
GetInstanceDifficulty ()  /WoW API/\n  Returns the current instance's Dungeon Difficulty (1-3, or 1 if player is not in an instance)
GetInventoryAlertStatus (index)  /WoW API/\n  Returns one of several codes describing the "status" of an equipped item
GetInventoryItemBroken ("unit", invSlot)  /WoW API/\n  Determine if an inventory item is broken (no durability)
GetInventoryItemCooldown ("unit", invSlot)  /WoW API/\n  Get cooldown information for an inventory item
GetInventoryItemCount ("unit", invSlot)  /WoW API/\n  Determine the quantity of an item in an inventory slot
GetInventoryItemLink ("unit", invSlot)  /WoW API/\n  Returns an itemLink for an inventory (equipped) item
GetInventoryItemQuality ("unit", invSlot)  /WoW API/\n  Return the quality of an inventory item
GetInventoryItemTexture ("unit", invSlot)  /WoW API/\n  Return the texture for an inventory item
GetInventorySlotInfo (invSlotName)  /WoW API/\n  Get the info for a named inventory slot (slot ID and texture)
GetItemCooldown (itemid or "name" or itemLink)  /WoW API/\n  Returns startTime, duration, enable
GetItemCount(itemID|"itemLink")\n  returns how many of specified item you have in your inventory
GetItemInfo (itemId or "itemString")  /WoW API/\n  Returns information about an item
GetItemQualityColor (quality)  /WoW API/\n  Returns the RGB color codes for a quality
GetItemSpell (item)  /WoW API/\n  Returns name, rank
GetJackpotAmount ()  /WoW API/\n  ?   - Added in 1.12
GetLanguageByIndex (index)  /WoW API/\n  Returns the language specified by the index
GetLastLotteryNumbers ()  /WoW API/\n  ?   - Added in 1.12
GetLocale ()  /WoW API/\n  Returns client locale, example 'enUS'
GetLookingForGroup ()  /WoW API/
GetLootMethod ()  /WoW API/\n  Return the currently active lootMethod
GetLootRollItemInfo (rollId)  /WoW API/
GetLootRollItemLink (rollId)  /WoW API/
GetLootRollTimeLeft (rollid)  /WoW API/
GetLootSlotInfo (slot)  /WoW API/\n  Returns icon path, item name, and item quantity for the item in the given loot window slot
GetLootSlotLink (slot)  /WoW API/\n  Returns an itemLink for the item in the given loot window slot
GetLootThreshold ()  /WoW API/\n  Return the current loot threshold (for group/master loot)
GetLotteryPrizeInfo ()  /WoW API/\n  ?   - Added in 1.12
GetMacroIconInfo (index)  /WoW API/\n  Returns texture of the icons provided by Blizzard
GetMacroIndexByName ("name")  /WoW API/\n  Returns macro index
GetMacroInfo(id|"name")\n  Returns "name", iconTextureID, "body", local
GetMapContinents ()  /WoW API/\n  Returns the continent names
GetMapInfo ()  /WoW API/\n  Returns the name and size of the current world map
GetMapLandmarkInfo (landmarkIndex)  /WoW API/\n  Returns information about a landmark on the current world map
GetMapOverlayInfo (overlayIndex)  /WoW API/\n  Returns information about an overlay on the current world map
GetMapZones (continentIndex)  /WoW API/\n  Returns the zone names of a continent
GetMasterLootCandidate (index)  /WoW API/\n  Return the name of a player who is eligible to receive loot in master mode
GetMeetingStoneStatusText ()  /WoW API/
GetMerchantItemInfo (index)  /WoW API/\n  Returns information about the given purchasable item
GetMerchantItemLink (index)  /WoW API/\n  Returns an itemLink for the given purchasable item
GetMerchantItemMaxStack (index)  /WoW API/\n  Returns the maximum number of items in a stack
GetMerchantNumItems ()  /WoW API/\n  Returns the number of items the merchant sells
GetMinigameState ()  /WoW API/
GetMinigameType ()  /WoW API/
GetMinimapZoneText ()  /WoW API/\n  Returns the zone text, that is displayed over the minimap
GetMoney ()  /WoW API/\n  Returns an integer value of your held money in copper
GetMoneyPrizes ()  /WoW API/\n  ?   - Added in 1.12
GetMouseButtonClicked ()  /WoW API/\n  Returns the name of the button that triggered a mouse down/up/click/doubleclick event. (NEW 2.0.3)
GetMouseFocus ()  /WoW API/\n  Returns the frame that currently has the mouse focus
GetMultisampleFormats ()  /WoW API/\n  Get the available multi-sample (antialias) formats.
GetNetStats ()  /WoW API/\n  Get bandwidth and latency network information
GetNextDrawTime ()  /WoW API/\n  ?   - Added in 1.12
GetNextStableSlotCost ()  /WoW API/
GetNumActiveQuests ()  /WoW API/\n  Gets the number of currently active quests from this NPC (only available after QUEST_GREETING event)
GetNumAddOns ()  /WoW API/\n  Get the number of user supplied AddOns
GetNumArenaTeamMembers (teamIndex[, showOffline])  /WoW API/\n  Gets the number of arena team members, this requires a call to ArenaTeamRoster you only need to do this when the player logins in, UI reloads will not effect the return
GetNumAuctionItems ("type")  /WoW API/\n  Returns the size of the specified auction item list
GetNumAvailableQuests ()  /WoW API/\n  Gets the number of currently available quests from this NPC (only available after QUEST_GREETING event)
GetNumBankSlots ()  /WoW API/\n  Returns total purchased bank bag slots, and a flag indicating if it's full
GetNumBattlefieldFlagPositions ()  /WoW API/\n  Get the number of flag positions available from GetBattlefieldFlagPosition()
GetNumBattlefieldPositions ()  /WoW API/\n  Get the number of positions available from GetBattlefieldPosition()
GetNumBattlefieldScores ()  /WoW API/\n  Returns the number of scores(players) listed in the battlefield scoreboard
GetNumBattlefieldStats ()  /WoW API/\n  Get the number of battleground specific columns
GetNumBattlefields ()  /WoW API/\n  Get the number of running battlefields for the last battleground queue window you opened
GetNumBindings ()  /WoW API/\n  Get total number key bindings and headers
GetNumBuybackItems ()  /WoW API/\n  Returns number of items available for buyback
GetNumCrafts ()  /WoW API/
GetNumFactions ()  /WoW API/\n  Returns the number of lines in the faction display
GetNumFrames ()  /WoW API/\n  Get the current number of Frame (and derivative) objects
GetNumFriends ()  /WoW API/\n  Returns how many friends are on your friend list
GetNumGuildMembers (offline)  /WoW API/\n  Returns the number of guild members total
GetNumIgnores ()  /WoW API/\n  Get the number of players on your ignore list
GetNumLaguages ()  /WoW API/\n  Returns the number of languages your character can speak (I guess Blizzard's programmers mistyped that function name)
GetNumLootItems ()  /WoW API/\n  Returns amount of objects to loot (number)
GetNumLotteryPrizes ()  /WoW API/\n  ?   - Added in 1.12
GetNumMacroIcons ()  /WoW API/\n  Returns the number of usable icons provided by Blizzard
GetNumMacros ()  /WoW API/\n  Returns the number of macros the user has
GetNumMapLandmarks ()  /WoW API/\n  Returns the number of landmarks on the current world map
GetNumMapOverlays ()  /WoW API/\n  Returns the number of overlays on the current world map
GetNumPackages ()  /WoW API/\n  Not yet fully implemented. Currently it always returns 1
GetNumPartyMembers ()  /WoW API/\n  Returns the number of party members
GetNumPastDrawResults ()  /WoW API/\n  ?   - Added in 1.12
GetNumPetitionNames ()  /WoW API/
GetNumQuestChoices ()  /WoW API/\n  Returns the number of rewards available for choice for quest currently in gossip window
GetNumQuestItems ()  /WoW API/\n  Returns the number of items necessary to complete a particular quest
GetNumQuestLeaderBoards ([questIndex])  /WoW API/\n  Returns the number of available quest objectives
GetNumQuestLogChoices ()  /WoW API/\n  Returns the number of options someone has when getting a quest item
GetNumQuestLogEntries ()  /WoW API/\n  Returns the number of entries in the quest log
GetNumQuestLogRewards ()  /WoW API/\n  Returns the count of the rewards for a particular quest
GetNumQuestRewards ()  /WoW API/\n  Returns number of reward items (those that you always get) for quest currently in gossip window
GetNumQuestWatches ()  /WoW API/\n  Returns the number of quest watches active
GetNumRaidMembers ()  /WoW API/\n  Returns the number of raid members
GetNumRoutes (slot)  /WoW API/\n  &nbsp - Gets the number of hops between current-slot and slot
GetNumSavedInstances ()  /WoW API/\n  Gets the number of instances that the player is saved to
GetNumShapeshiftForms ()  /WoW API/
GetNumSkillLines ()  /WoW API/\n  get the number of lines in the skill window, including headers
GetNumSpellTabs ()  /WoW API/\n  Returns the total number of tabs in the user's spellbook
GetNumStablePets ()  /WoW API/\n  Returns the number of pets in the stable
GetNumStableSlots ()  /WoW API/\n  Returns the number of stable slots you own
GetNumStationeries ()  /WoW API/\n  Not yet fully implemented. Currently it always returns 1
GetNumTalentTabs ()  /WoW API/\n  return number of talent trees (usually 3)
GetNumTalents (tabIndex)  /WoW API/\n  return number of talents in tree
GetNumTradeSkills ()  /WoW API/\n  Get the number of trade skill entries (including headers)
GetNumTrainerServices ()  /WoW API/\n  Get the number of the trainer services
GetNumWhoResults ()  /WoW API/\n  Return the number of entries resulting from your most recent /who query
GetObjectiveText ()  /WoW API/\n  Gets the objective of the current quest
GetOwnerAuctionItems ([page])  /WoW API/
GetPVPLastWeekStats ()  /WoW API/\n  Get your PvP/Honor statistics for last week
GetPVPLifetimeStats ()  /WoW API/\n  Get your PvP/Honor statistics for your lifetime
GetPVPRankInfo (rank[, unit])  /WoW API/\n  Get information about a specific PvP rank
GetPVPRankProgress ()  /WoW API/\n  Get information about the PvP rank progress
GetPVPSessionStats ()  /WoW API/\n  Get your PvP/Honor statistics for this session
GetPVPThisWeekStats ()  /WoW API/\n  Get your PvP/Honor statistics for this week
GetPVPYesterdayStats ()  /WoW API/\n  Get your PvP/Honor statistics for yesterday
GetPackageInfo (index)  /WoW API/\n  Not yet fully implemented. Currently an index of 1 returns "Test Package"
GetParryChance ()  /WoW API/\n  Returns the player's percentage parry chance
GetPartyAssignment ("assignment")  /WoW API/
GetPartyLeaderIndex ()  /WoW API/\n  Returns the index of the party leader (1-4) if not yourself
GetPartyMember (index)  /WoW API/\n  Returns 1 if the party member at the given index exists, nil otherwise.
GetPastDrawResult ()  /WoW API/\n  ?   - Added in 1.12
GetPetActionCooldown (index)  /WoW API/\n  Returns cooldown information for the pet action at the specificed pet action bar slot
GetPetActionInfo (index)  /WoW API/\n  Returns information on the pet action at the specified pet action bar slot
GetPetActionsUsable ()  /WoW API/\n  Returns a value indicating if the player's pet's actions can be used at this time
GetPetExperience ()  /WoW API/\n  Returns the pet's current xp, and total xp required for next level
GetPetFoodTypes ()  /WoW API/\n  Returns a list of the food types the player's pet can eat
GetPetHappiness ()  /WoW API/\n  Returns the pet's happiness, damage percentage, and loyalty gain rate
GetPetIcon ()  /WoW API/\n  Returns the path to the texture to use as the icon for the player's pet
GetPetLoyalty ()  /WoW API/\n  Returns the name of the pet's current loyalty level
GetPetTimeRemaining ()  /WoW API/\n  Returns in milliseconds about some timeout for the player's pet
GetPetTrainingPoints ()  /WoW API/\n  Returns the pet's current total and used training points
GetPetitionInfo ()  /WoW API/
GetPetitionNameInfo (index)  /WoW API/
GetPlayerBuff (buffId, buffFilter)  /WoW API/\n  Retrieves info about a certain effect (beneficial, harmful or passive)
GetPlayerBuffApplications (id or "name"[,"rank"])  /WoW API/\n  Retrieves the number of applications of a debuff or buff
GetPlayerBuffDispelType (id or "name"[,"rank"])  /WoW API/\n  Get the debuff type for a player debuff ("Magic", "Curse", "Disease", or "Poison")
GetPlayerBuffName (id or "name"[,"rank"])  /WoW API/\n  Returns name, rank
GetPlayerBuffTexture (id or "name"[,"rank"])  /WoW API/\n  Retrieves the texture identifier for a certain buff
GetPlayerBuffTimeLeft (buffIndex)  /WoW API/\n  Retrieves how long a buff will last before expiring
GetPlayerMapPosition ("unit")  /WoW API/\n  Returns the position of a unit on the current world map
GetPlayerTradeMoney ()  /WoW API/\n  Returns the amount of money the player has in the trade window
GetProgressText ()  /WoW API/\n  Returns quest progress text, displayed by the NPC before the player pressed "Continue"
GetQuestBackgroundMaterial ()  /WoW API/\n  Returns the material string associated with the particular quest
GetQuestGreenRange ()  /WoW API/\n  Return for how many levels below you quests and mobs remain "green" (i.e. yield xp)
GetQuestIndexForTimer
GetQuestIndexForWatch (watchIndx)  /WoW API/\n  Return the quest index for the specified watch
GetQuestItemInfo ()  /WoW API/\n  Returns basic information about the reward/choice/required item for quest currently in gossip window
GetQuestItemLink ("type", index)  /WoW API/\n  Returns an itemLink for a quest reward item
GetQuestItemLink ()  /WoW API/\n  Returns an itemLink for a selected quest reward/choice/required item for quest currently in gossip window
GetQuestLogChoiceInfo ()  /WoW API/\n  Returns a bunch of data about a quest reward choice from the quest log
GetQuestLogItemLink ("type", index)  /WoW API/\n  Returns item link for selected quest reward/choice/required item from quest log
GetQuestLogLeaderBoard (ldrIndex[, questIndex])  /WoW API/\n  Gets information about the objectives for a quest
GetQuestLogPushable ()  /WoW API/\n  Returns true if the currently loaded quest in the quest window can be shared
GetQuestLogQuestText ()  /WoW API/\n  Returns the description and objectives required for the specified quest
GetQuestLogRequiredMoney ()  /WoW API/\n  Returns amount of money required for quest completion from quest log
GetQuestLogRewardInfo ()  /WoW API/\n  Returns a pile of reward item info from the quest log
GetQuestLogRewardMoney ()  /WoW API/\n  Returns a number representing the amount of copper returned by a particular quest
GetQuestLogRewardSpell ()  /WoW API/\n  Returns name and texture of spell awarded for quest completion from quest log
GetQuestLogSelection ()  /WoW API/\n  Returns a number associated with the QuestLogSelection index
GetQuestLogTimeLeft ()  /WoW API/
GetQuestLogTitle (index)  /WoW API/\n  Returns verbose data about a particular quest log entry: level requirement, tag, suggested group, completed status, etc
GetQuestMoneyToGet ()  /WoW API/\n  Returns amount of money required for quest currently displayed in gossip
GetQuestReward (rewardIndex)  /WoW API/\n  Completes the quest with the specified quest reward
GetQuestText ()  /WoW API/\n  Gets the description of the current quest
GetQuestTimers ()  /WoW API/\n  Returns all of the quest timers currently in progress
GetRaidRosterInfo (index)  /WoW API/\n  Returns information about the members of your raid 
GetRaidRosterSelection ()  /WoW API/
GetRaidTargetIndex ("unit")  /WoW API/\n  Get the raid target index assigned to a unit
GetRangedCritChance ()  /WoW API/\n  Returns the players ranged critical strike chance
GetRealZoneText ()  /WoW API/\n  Returns either instance name or zone name
GetRealmName ()  /WoW API/\n  returns the name of the server a user is logged in to
GetRefreshRates (x)  /WoW API/
GetReleaseTimeRemaining ()  /WoW API/\n  Returns the amount of time left before your ghost is pulled from your body
GetRepairAllCost ()  /WoW API/
GetResSicknessDuration ()  /WoW API/
GetRestState ()  /WoW API/
GetRewardMoney ()  /WoW API/\n  Returns a amount of copper rewarded for completion of quest displayed in gossip
GetRewardSpell ()  /WoW API/\n  Returns name and texture of spell awarded for quest completion for quest currently in gossip window
GetRewardText ()  /WoW API/\n  Returns quest reward text, displayed by the NPC before the player hits "Complete Quest"
GetSavedInstanceInfo (index)  /WoW API/\n  Gets information about an instance that the player is saved to
GetScreenHeight ()  /WoW API/\n  Returns the height of the window in pixels
GetScreenResolutions ()  /WoW API/
GetScreenWidth ()  /WoW API/\n  Returns the width of the window in pixels
GetSelectedAuctionItem ("type")  /WoW API/\n  Returns the index (1-50) of the selected auction item or 0 if none is selected
GetSelectedBattlefield ()  /WoW API/\n  Get the selected battlefield to join first
GetSelectedFaction ()  /WoW API/\n  Returns the row index of the currently selected faction in reputation window. (New in 1.10)
GetSelectedFriend ()  /WoW API/\n  Returns the index of the current selected friend
GetSelectedIgnore ()  /WoW API/
GetSelectedSkill ()  /WoW API/
GetSelectedStablePet ()  /WoW API/
GetSelectedStationeryTexture ()  /WoW API/\n  Not yet fully implemented. Currently it returns "STATIONERYTEST" when the mailbox is open
GetSendMailCOD ()  /WoW API/
GetSendMailItem ()  /WoW API/
GetSendMailMoney ()  /WoW API/
GetSendMailPrice ()  /WoW API/
GetShapeshiftForm (unknown)  /WoW API/\n  returns zero-based index of current form/stance
GetShapeshiftFormCooldown (index)  /WoW API/
GetShapeshiftFormInfo (index)  /WoW API/\n  Retrieves information about an available ShapeshiftForm or Stance
GetSkillLineInfo (index)  /WoW API/\n  get the information for a selected skill
GetSpellAutocast (index, bookIndex)  /WoW API/\n  Check wether the specified pet ability autocasts or not
GetSpellCooldown (spellID, "bookType")  /WoW API/\n  Retrieves data on the cooldown of a specific spell within your spellbook.
GetSpellCritChance (school)  /WoW API/\n  returns the players critical hit chance with a particular spell school
GetSpellName (spellID, "bookType")  /WoW API/\n  Returns the spell name and spell rank for a spell in the player's spellbook
GetSpellTabInfo (spellbookTabNum)  /WoW API/\n  Returns information about the specified spellbook tab
GetSpellTexture (spellID, "bookType")  /WoW API/
GetStablePetFoodTypes (index)  /WoW API/\n  Returns a list of the food types a specific stabled pet can eat
GetStablePetInfo (index)  /WoW API/\n  Returns information about a specific stabled pet
GetStationeryInfo (index)  /WoW API/\n  Not yet fully implemented. Currently an index of 1 returns "Default Stationery"
GetSubZoneText ()  /WoW API/\n  Returns the subzone text (e.g. "The Canals")
GetSummonConfirmAreaName ()  /WoW API/
GetSummonConfirmSummoner ()  /WoW API/
GetSummonConfirmTimeLeft ()  /WoW API/
GetTabardCreationCost ()  /WoW API/\n  Returns cost in coppers
GetTabardInfo ()  /WoW API/
GetTalentInfo (tabIndex, talentIndex)  /WoW API/\n  return name, iconTexture, tier, column, rank, maxRank, isExceptional, meetsPrereq
GetTalentPrereqs (tabIndex, talentIndex)  /WoW API/\n  return tier, column, isLearnable
GetTalentTabInfo (tabIndex)  /WoW API/\n  return name, iconTexture, pointsSpent, background
GetTargetTradeMoney ()  /WoW API/\n  Returns the amount of money in the trade frame of the target player
GetTerrainMip ()  /WoW API/\n  Get the world appearance Terrain Texture
GetTexLodBias ()  /WoW API/
GetTime ()  /WoW API/\n  Returns the system uptime in seconds (millisecond precision)
GetTimeToWellRested ()  /WoW API/\n  Defunct
GetTitleName (index)  /WoW API/\n  Returns the player's current title name
GetTitleText ()  /WoW API/\n  Retrieves the title of the quest while talking to the NPC about it
GetTrackingTexture ()  /WoW API/\n  Return the texture of the current tracking buff, if one is active
GetTradePlayerItemInfo (id)  /WoW API/\n  Returns information about a trade item
GetTradePlayerItemLink (id)  /WoW API/\n  Returns an itemLink for the given item in your side of the trade window (if open)
GetTradeSkillCooldown (index)  /WoW API/\n  Returns the number of seconds left for a skill to cooldown
GetTradeSkillIcon (index)  /WoW API/\n  Returns the texture name of a tradeskill's icon
GetTradeSkillInfo (index)  /WoW API/\n  Retrieves information about a specific trade skill
GetTradeSkillInvSlotFilter (slotIndex)  /WoW API/\n  Returns 1 if items corresponding to slotIndex are currently visible, otherwise nil
GetTradeSkillInvSlots ()  /WoW API/\n  Returns a list of the available inventory slot types
GetTradeSkillItemLink (index)  /WoW API/\n  Returns the itemLink for a trade skill item
GetTradeSkillItemStats (index)  /WoW API/\n  Returns information about the item produced
GetTradeSkillLine ()  /WoW API/\n  Returns information about the selected skill line
GetTradeSkillNumMade (index)  /WoW API/\n  Gets the number of items made in a single use of a skill
GetTradeSkillNumReagents (tradeSkillRecipeId)  /WoW API/\n  Returns the number of different reagents required
GetTradeSkillReagentInfo (tradeSkillRecipeId, reagentId)  /WoW API/\n  Returns data on the reagent, including a count of the player's inventory
GetTradeSkillReagentItemLink (index, reagentId)  /WoW API/\n  Returns the itemLink for one of the reagents needed to craft the given item
GetTradeSkillSelectionIndex ()  /WoW API/\n  Returns the Id of the currently selected trade skill, 0 if none selected
GetTradeSkillSubClassFilter (filterIndex)  /WoW API/\n  Returns 1 if items corresponding to filterIndex are currently visible, otherwise nil
GetTradeSkillSubClasses ()  /WoW API/\n  Returns a list of the valid subclasses
GetTradeSkillTools (index)  /WoW API/\n  Returns information about the tools needed for a tradeskill
GetTradeTargetItemInfo (id)  /WoW API/\n  Returns information about a trade item
GetTradeTargetItemLink (id)  /WoW API/\n  Returns an itemLink for the given item in the other player's side of the trade window (if open)
GetTradeskillRepeatCount ()  /WoW API/
GetTrainerGreetingText ()  /WoW API/\n  Get the trainer's greeting text
GetTrainerSelectionIndex ()  /WoW API/\n  Get the index of the selected trainer service
GetTrainerServiceAbilityReq (trainerIndex, reqIndex)  /WoW API/\n  Used for displaying the requirements to learn a new profession, profession skill or class skill
GetTrainerServiceCost (index)  /WoW API/\n  Returns the cost of a specific trainer service
GetTrainerServiceDescription (index)  /WoW API/\n  Returns the description of a specific trainer service
GetTrainerServiceIcon (index)  /WoW API/\n  Returns icon texture for a trainer service
GetTrainerServiceInfo (index)  /WoW API/\n  Returns information about a trainer service
GetTrainerServiceLevelReq (index)  /WoW API/\n  Get the required level to learn the skill
GetTrainerServiceNumAbilityReq ()  /WoW API/\n  Get the maximum number of requirements that GetTrainerServiceAbilityReq() has
GetTrainerServiceSkillLine (index)  /WoW API/
GetTrainerServiceSkillReq (index)  /WoW API/\n  Returns a String and Variable for the requirements of a specific trainer service
GetTrainerServiceStepIncrease ()  /WoW API/
GetTrainerServiceStepReq ()  /WoW API/
GetTrainerServiceTypeFilter ("filter")  /WoW API/\n  Returns the status of a skill filter in the trainer window
GetTrainerSkillLineFilter ()  /WoW API/
GetTrainerSkillLines ()  /WoW API/
GetVideoCaps ()  /WoW API/
GetWatchedFactionInfo ()  /WoW API/\n  Returns information about the currently watched faction. (New in 1.10)
GetWaterDetail ()  /WoW API/
GetWeaponEnchantInfo ()  /WoW API/\n  Return information about main and offhand weapon enchantments
GetWhoInfo (index)  /WoW API/
GetWorldDetail ()  /WoW API/\n  Get the world appearance Environment Detail
GetWorldLocMapPosition (continent, x, y)  /WoW API/
GetWorldStateUIInfo (i)  /WoW API/\n  Get score and flag status within a battlefield
GetXPExhaustion ()  /WoW API/\n  Returns your character's current rested XP, nil if character is not rested
GetZonePVPInfo ()  /WoW API/\n  Returns PVP info for the current zone
GetZoneText ()  /WoW API/\n  Returns the zone text (e.g. "Stormwind City")
GiveMasterLoot (slot, index)  /WoW API/
GuildControlAddRank ("name")  /WoW API/\n  Add another rank called "name". Only Guildmaster?
GuildControlDelRank ()  /WoW API/\n  Delete rank? Only Guildmaster?
GuildControlGetNumRanks ()  /WoW API/\n  Returns number of ranks after guild frame open. Any guild member can use this
GuildControlGetRankFlags ()  /WoW API/\n  Returns list of values for each permission for your rank
GuildControlGetRankName (index)  /WoW API/\n  Returns name of the rank. Any guild member can use this
GuildControlSaveRank ("name")  /WoW API/\n  Only Guildmaster?
GuildControlSetRank (rank)  /WoW API/
GuildControlSetRankFlag (index, enabled)  /WoW API/\n  Enable/disable permission for some action
GuildDemote ("name")  /WoW API/
GuildDisband ()  /WoW API/\n  Disbands at once your guild. You must be the guild's leader to do so. Be careful, no warning is given prior disbanding
GuildInfo ()  /WoW API/\n  Displays information about the guild you are a member of
GuildInviteByName ("name")  /WoW API/
GuildLeave ()  /WoW API/\n  Removes you from your current guild
GuildPromote ("name")  /WoW API/
GuildRoster ()  /WoW API/\n  Fetches the guild list and fires a GUILD_ROSTER_UPDATE event
GuildRosterSetOfficerNote (index, "note")  /WoW API/
GuildRosterSetPublicNote (index, "note")  /WoW API/
GuildSetLeaderByName ("name")  /WoW API/\n  Set member of guild as a new Guilmaster (only Guildmaster)
GuildSetMOTD ("note")  /WoW API/\n  Set Guild Message of the Day to "note"
GuildUninviteByName ("name")  /WoW API/
HasAction (slot)  /WoW API/\n  Returns 1 if the player has an action in the specified slot, nil otherwise
HasFullControl ()  /WoW API/
HasInspectHonorData ()  /WoW API/\n  Determine if the inspected unit's honor data is available
HasKey ()  /WoW API/\n  Returns 1 if the player has a keyring, nil otherwise
HasNewMail ()  /WoW API/\n  Returns nil if there is no new mail
HasPetSpells ()  /WoW API/\n  Returns true if the player has pet spells
HasPetUI ()  /WoW API/\n  Returns true if the player has a pet User Interface
HasSoulstone ()  /WoW API/
HasWandEquipped ()  /WoW API/\n  Returns 1 if a wand is equipped, false otherwise
HideFriendNameplates ()  /WoW API/\n  Turn off display of nameplates above friendly units.   - Added in 1.12
HideNameplates ()  /WoW API/\n  Turn off display of nameplates
HideRepairCursor ()  /WoW API/
InCinematic ()  /WoW API/
InCombatLockdown ()  /WoW API/\n  Returns true if the in-combat AddOn restrictions are active
InRepairMode ()  /WoW API/\n  Returns true if your cursor is in repair mode
InboxItemCanDelete (index)  /WoW API/\n  Boolean check for whether a message is returnable to the sender
InitiateTrade (UnitId)  /WoW API/\n  Asks the specified unit to trade
InviteUnit ("name" or "unit")  /WoW API/\n  Invites the specified player to the group you are currently in (new for WoW 2.0)
IsActionInRange (slot,[unit])  /WoW API/\n  Test if an action is in range (1=yes, 0=no, nil=not applicable)
IsActionSelfCastKeyDown ()  /WoW API/
IsActiveBattlefieldArena ()  /WoW API/\n  Returns true if in an Arena Match, also Returns true if its a registered match
IsAddOnLoadOnDemand (index or "AddOnName")  /WoW API/\n  Test whether an AddOn is load-on-demand
IsAddOnLoaded (index or "AddOnName")  /WoW API/\n  Returns true if the specified AddOn is loaded
IsAltKeyDown ()  /WoW API/\n  Returns true if the alt key is currently depressed
IsArenaTeamCaptain (teamIndex)  /WoW API/\n  Returns a value based on whether the player is the arena team captain
IsAttackAction (slot)  /WoW API/\n  Return 1 if an action is an 'attack' action (flashes during combat), nil otherwise
IsAttackSpell (spell)  /WoW API/
IsAuctionSortReversed ("type", "sort")  /WoW API/\n  Returns 1 if the specified auction list and sort is reversed, nil otherwise
IsAutoLootKeyDown ()  /WoW API/
IsAutoRepeatAction (slot)  /WoW API/\n  Return 1 if an action is auto-repeating, nil otherwise
IsAutoRepeatSpell (spell)  /WoW API/
IsConsumableAction (slot)  /WoW API/\n  Return 1 if an action is consumable (i.e. has a count), nil otherwise
IsConsumableItem (item)  /WoW API/
IsControlKeyDown ()  /WoW API/\n  Returns true if the control key is currently depressed
IsCurrentAction (slot)  /WoW API/\n  Return 1 if an action is the one currently underway, nil otherwise
IsCurrentCast (id, "bookType")  /WoW API/
IsCurrentItem (item)  /WoW API/
IsCurrentQuestFailed ()  /WoW API/
IsEquippableItem (itemid or "name" or itemLink)  /WoW API/\n  Returns 1 or nil
IsEquippedAction (slot)  /WoW API/\n  Return 1 if an action is equipped (i.e. connected to an item that must be equipped), nil otherwise
IsEquippedItem (item)  /WoW API/
IsEquippedItemType ("type")  /WoW API/\n  Where "type" is any valid inventory type, item class, or item subclass
IsFactionInactive (index)  /WoW API/\n  Returns true if the faction is marked inactive. (New in 1.10)
IsFeignDeath ()  /WoW API/\n  Returns 1 if the player is feigning death, nil otherwise
IsFishingLoot ()  /WoW API/
IsFlying ()  /WoW API/
IsGuildLeader ()  /WoW API/
IsInGuild ()  /WoW API/\n  Lets you know whether you are in a guild
IsInInstance ()  /WoW API/\n  Returns 1 if the player is in an instance
IsInMeetingStoneQueue ()  /WoW API/
IsInventoryItemLocked (id)  /WoW API/\n  Returns whether an inventory item is locked, usually as it awaits pending action
IsItemInRange (item, [unit])  /WoW API/\n  Nil for no valid target, 0 for out of range, 1 for in range
IsLinuxClient ()  /WoW API/\n  Boolean - Returns true if WoW is being run on Linux
IsMacClient ()  /WoW API/\n  Checks client system
IsModifierKeyDown ()  /WoW API/\n  equivalent to (IsShiftKeyDown() or IsControlKeyDown() or IsAltKeyDown())
IsMounted ()  /WoW API/\n  Returns 1 if mounted, otherwise nil
IsMouseButtonDown ([button or "button"])  /WoW API/
IsMouselooking ()  /WoW API/\n  Returns 1 if mouselook is currently active, nil otherwise
IsPartyLeader ()  /WoW API/\n  Returns true if the player is the party leader
IsPassiveSpell (spellID, "bookType")  /WoW API/\n  Returns whether the icon in your spellbook is a Passive ability. Formerly IsSpellPassive(spell)
IsPetAttackActive ()  /WoW API/\n  Returns true if the pet is currently attacking
IsQuestCompletable ()  /WoW API/\n  Returns true if a quest is possible to complete
IsQuestWatched (questIndex)  /WoW API/\n  Determine if the specified quest is watched
IsRaidLeader ()  /WoW API/\n  Returns a value based on whether the player is a raid leader
IsRaidOfficer ()  /WoW API/\n  Returns a value based on whether the player is a raid officer (assistant(?))
IsResting ()  /WoW API/
IsShiftKeyDown ()  /WoW API/\n  Returns true if the shift key is currently depressed
IsSpellInRange (spellID, "bookType", [unit])  /WoW API/\n  Is nil for no valid target, 0 for out of range, 1 for in range
IsStealthed ()  /WoW API/\n  Returns 1 if stealthed or shadowmeld, otherwise nil
IsSwimming ()  /WoW API/
IsTalentTrainer
IsTradeskillTrainer ()  /WoW API/\n  Returns 1 if trainer is for a tradeskill
IsTrainerServiceLearnSpell (index)  /WoW API/
IsTrainerServiceSkillStep ()  /WoW API/
IsTrainerServiceTradeSkill ()  /WoW API/
IsUnitOnQuest (questIndex, "unit")  /WoW API/\n  Determine if the specified unit is on the given quest
IsUsableAction (slot)  /WoW API/\n  Return 1 if an action can be used at present, nil otherwise
IsUsableItem (item)  /WoW API/\n  Returns usable, noMana
IsUsableSpell (spell)  /WoW API/
IsVendorActive ()  /WoW API/\n  ?   - Added in 1.12
IsWindowsClient ()  /WoW API/\n  Returns true if WoW is being run on Windows
ItemHasRange (item)  /WoW API/
ItemTextGetCreator ()  /WoW API/\n  Get the creator of the current text (if player-created)
ItemTextGetItem ()  /WoW API/\n  Get the name of the text
ItemTextGetMaterial ()  /WoW API/\n  Get the material on which the text is printed
ItemTextGetPage ()  /WoW API/\n  Get the page number of the currently viewed page
ItemTextGetText ()  /WoW API/\n  Get the page contents of the currently viewed page
ItemTextHasNextPage ()  /WoW API/\n  Determine if there is another page after the current one
ItemTextNextPage ()  /WoW API/\n  Request the next page of the text
ItemTextPrevPage ()  /WoW API/\n  Request the previous page of the text
JoinBattlefield (index[, joinAs])  /WoW API/\n  Queue for a battleground either solo or as a group
JoinChannelByName ("channel"[, "password"[, frameId]])  /WoW API/\n  Join the specified chat channel (with optional password, and register for specified frame) (updated in 1.9)
Jump ()  /WoW API/ PROTECTED\n  The player jumps. (2.0.1 - Removed)
JumpOrAscendStart ()  /WoW API/ PROTECTED\n  Makes the player jump
KeyRingButtonIDToInvSlotID (buttonID)  /WoW API/\n  Map a keyring button to an inventory slot button for use in inventory functions
LearnTalent (tabIndex, talentIndex)  /WoW API/
LeaveBattlefield ()  /WoW API/\n  Leave the current battlefield
LeaveChannelByName ("channel")  /WoW API/\n  Leaves the channel with the specified name
LeaveParty ()  /WoW API/\n  Quit the party
ListChannelByName (channelMatch)  /WoW API/\n  Lists members in the given channel to the chat window
ListChannels ()  /WoW API/\n  Lists all of the channels into the chat window
LoadAddOn (index or "AddOnName")  /WoW API/\n  Request loading of a Load-On-Demand AddOn
LoadBindings (which)  /WoW API/\n  Loads default, account or character specific key binding set into memory from disk
LoggingChat (newState)  /WoW API/\n  Gets or sets whether logging chat to Logs\WoWChatLog.txt is enabled
LoggingCombat (newState)  /WoW API/\n  Gets or sets whether logging combat to Logs\WoWCombatLog.txt is enabled
Logout ()  /WoW API/\n  Logs the user out of the game
LootSlot (slot)  /WoW API/\n  Used to confirm the looting of a BOP item. Use ConfirmLootSlot instead
LootSlotIsCoin (slot)  /WoW API/
LootSlotIsItem (slot)  /WoW API/
MouselookStart ()  /WoW API/
MouselookStop ()  /WoW API/
MoveBackwardStart ()  /WoW API/ PROTECTED\n  The player begins moving backward at the specified time
MoveBackwardStop ()  /WoW API/ PROTECTED\n  The player stops moving backward at the specified time
MoveForwardStart ()  /WoW API/ PROTECTED\n  The player begins moving forward at the specified time
MoveForwardStop ()  /WoW API/ PROTECTED\n  The player stops moving forward at the specified time
MoveViewDownStart ()  /WoW API/\n  Begins rotating the camera downward
MoveViewDownStop ()  /WoW API/\n  Stops rotating the camera after MoveViewDownStart() is called
MoveViewInStart ()  /WoW API/\n  Begins zooming the camera in
MoveViewInStop ()  /WoW API/\n  Stops zooming the camera in after MoveViewInStart() is called
MoveViewLeftStart ()  /WoW API/\n  Begins rotating the camera to the Left
MoveViewLeftStop ()  /WoW API/\n  Stops rotating the camera after MoveViewLeftStart() is called
MoveViewOutStart ()  /WoW API/\n  Begins zooming the camera out
MoveViewOutStop ()  /WoW API/\n  Stops zooming the camera out after MoveViewOutStart() is called
MoveViewRightStart ()  /WoW API/\n  Begins rotating the camera to the Right
MoveViewRightStop ()  /WoW API/\n  Stops rotating the camera after MoveViewRightStart() is called
MoveViewUpStart ()  /WoW API/\n  Begins rotating the camera upward
MoveViewUpStop ()  /WoW API/\n  Stops rotating the camera after MoveViewUpStart() is called
MusicPlayer_BackTrack ()  /WoW API/ PROTECTED\n  Go back a track (Mac iTunes only)   - Added in 1.12
MusicPlayer_NextTrack ()  /WoW API/ PROTECTED\n  Go forward a track (Mac iTunes only)   - Added in 1.12
MusicPlayer_PlayPause ()  /WoW API/ PROTECTED\n  Toggle play/paulse (Mac iTunes only)   - Added in 1.12
MusicPlayer_VolumeDown ()  /WoW API/ PROTECTED\n  Reduce music volume (Mac iTunes only)   - Added in 1.12
MusicPlayer_VolumeUp ()  /WoW API/ PROTECTED\n  Increase music volume (Mac iTunes only)   - Added in 1.12
NewGMTicket (type, "text")  /WoW API/
NextView ()  /WoW API/\n  Cycles forward through the five predefined camera positions
NoPlayTime ()  /WoW API/
NotWhileDeadError ()  /WoW API/\n  Generates an error message saying you cannot do that while dead
NotifyInspect ("unit")  /WoW API/
NumTaxiNodes ()  /WoW API/\n  Returns the number of nodes (flight paths) on an open taxi map
OfferPetition ()  /WoW API/
OffhandHasWeapon ()  /WoW API/\n  Determine if your offhand carries a weapon
OpenTrainer ()  /WoW API/
OpeningCinematic ()  /WoW API/\n  Shows the opening movie for a player's race
PartialPlayTime ()  /WoW API/
PetAbandon ()  /WoW API/\n  Permanently abandons your pet
PetAggressiveMode ()  /WoW API/ PROTECTED\n  Set your pet in aggressive mode. Protected function as of patch 2.0
PetAttack ()  /WoW API/ PROTECTED\n  Instruct your pet to attack your target. Protected as of patch 2.0
PetCanBeAbandoned ()  /WoW API/\n  Returns true if the pet is abandonable
PetCanBeRenamed ()  /WoW API/\n  Returns true if the pet can be renamed
PetDefensiveMode ()  /WoW API/ PROTECTED\n  Set your pet in defensive mode. Protected as of patch 2.0
PetDismiss ()  /WoW API/\n  Dismiss your pet
PetFollow ()  /WoW API/ PROTECTED\n  Instruct your pet to follow you. Protected as of patch 2.0
PetHasActionBar ()  /WoW API/\n  Determine if player has a pet with an action bar
PetPassiveMode ()  /WoW API/ PROTECTED\n  Set your pet into passive mode. Protected as of patch 2.0
PetRename ("name")  /WoW API/\n  Renames the pet
PetStopAttack ()  /WoW API/\n  Stop the attack of the pet
PetWait ()  /WoW API/ PROTECTED\n  Instruct your pet to remain still. Protected as of patch 2.0
PickupAction (slot)  /WoW API/\n  Drags an action out of the specified quickbar slot and holds it on the cursor
PickupBagFromSlot (slot)  /WoW API/\n  Picks up the bag from the specified slot, placing it in the cursor.\n  If an item is already picked up, this places the item into the specified slot, swapping the items if needed
PickupContainerItem (bagID, slot)  /WoW API/
PickupInventoryItem (invSlot)  /WoW API/\n  "Picks up" an item from the player's worn inventory
PickupMacro (id|"name")  /WoW API/\n  Pickup a macro button icon
PickupMerchantItem (index)  /WoW API/\n  Places the item on the cursor. If the cursor already has an item, the item in the cursor will be sold
PickupPetAction (slot)  /WoW API/\n  Drags an action from the specified pet action bar slot into the cursor
PickupPlayerMoney ()  /WoW API/\n  Picks up an amount of money from the player
PickupSpell (spellID, "bookType")  /WoW API/\n  Loads an action button onto the cursor to be dropped into a quickbar slot
PickupStablePet (index)  /WoW API/
PickupTradeMoney (amount)  /WoW API/
PitchDownStart ()  /WoW API/ PROTECTED\n  Begins pitching the camera Downward
PitchDownStop ()  /WoW API/ PROTECTED\n  Stops pitching the camera after PitchDownStart() is called
PitchUpStart ()  /WoW API/ PROTECTED\n  Begins pitching the camera Upward
PitchUpStop ()  /WoW API/ PROTECTED\n  Stops pitching the camera after PitchUpStart() is called
PlaceAction (slot)  /WoW API/\n  Drops an action from the cursor into the specified quickbar slot
PlaceAuctionBid ("type", index, bid)  /WoW API/\n  Place a bid on the selected auction item
PlayMusic ()  /WoW API/\n  Plays the specified mp3
PlaySound ()  /WoW API/\n  Plays the specified built-in sound effect
PlaySoundFile ()  /WoW API/\n  Plays the specified sound file
PlayerHasSpells ()  /WoW API/
PositionWorldMapArrowFrame (x, y)  /WoW API/\n  set the position of the arrow representing the player
PrevView ()  /WoW API/\n  Cycles backward through the five predefined camera positions
ProcessMapClick (x, y)  /WoW API/\n  Passes a click to the client, which then calculates if the zone has to be changed
PromoteByName ("name")  /WoW API/\n  Promotes by name the target
PromoteToAssistant ("unit")  /WoW API/\n  Promotes player to assistant status. Requires raid leadership
PromoteToLeader ("unit")  /WoW API/\n  Promote a unit to party leader
PurchaseSlot ()  /WoW API/\n  Buys another bank slot if available
PutItemInBackpack ()  /WoW API/\n  attempts to place item in backpack (bag slot 0)
PutItemInBag (inventoryId)  /WoW API/\n  attempts to place item in a specific bag
QueryAuctionItems ("name", minLevel, maxLevel, invTypeIndex, classIndex, subclassIndex, page, isUsable, qualityIndex)  /WoW API/
QueryCastSequence (sequence)  /WoW API/\n  Returns index, item, spell
QuestChooseRewardError ()  /WoW API/\n  Throws an error when the quest choose reward method doesn't work
QuestLogPushQuest ()  /WoW API/\n  Initiates the sharing of the currently viewed quest in the quest log
Quit ()  /WoW API/\n  Quits the application, NOT the LUA script
RandomRoll (low, high)  /WoW API/\n  Does a random roll between the two values
ReadFile ()  /WoW API/
RegisterCVar ("varname"[, value])  /WoW API/\n  Registers a variable for use with the GetCVar and SetCVar functions
RemoveChatWindowChannel (chatFrameIndex, "channel")  /WoW API/\n  Make a chat channel invisible (hidden) in a specific ChatFrame
RemoveChatWindowMessages (chatFrameIndex,"messageGroup")  /WoW API/\n  Remove a set of chat messages from this window
RemoveFriend ("name" or index)  /WoW API/\n  Removes a friend from your friend list
RemoveQuestWatch (index)  /WoW API/\n  Remove a quest watch (Is the index a quest or watch index?)
RemoveSkillUp (index)  /WoW API/
RenamePetition ("name")  /WoW API/\n  ? - (NEW IN 1300)
RepairAllItems ()  /WoW API/\n  Repairs all equipped and inventory items
ReplaceEnchant ()  /WoW API/
ReplaceTradeEnchant ()  /WoW API/\n  Confirm the replacement of an enchantment via trade
RepopMe ()  /WoW API/\n  The "Release Spirit" button. Sends you to the graveyard when dead. -Moof
RequestBattlefieldPositions ()  /WoW API/\n  Request new data for GetBattlefieldPosition ()
RequestBattlefieldScoreData ()  /WoW API/\n  Request new data for GetBattlefieldScore ()
RequestInspectHonorData ()  /WoW API/\n  Request honor data for inspected unit
RequestRaidInfo ()  /WoW API/\n  Returns information about which instances you are saved to
RequestTimePlayed ()  /WoW API/\n  Request a summary of time played from the server
ResetCursor ()  /WoW API/
ResetDisabledAddOns ()  /WoW API/
ResetInstances ()  /WoW API/\n  Reset instances
ResetPerformanceValues ()  /WoW API/
ResetTutorials ()  /WoW API/
ResetView (index)  /WoW API/\n  Resets the specified (1-5) predefined camera position to it's default if it was changed using SaveView(index)
RestartGx ()  /WoW API/\n  Restarts the graphical engine. Needed for things such as resolution changes to take effect
ResurrectHasSickness ()  /WoW API/\n  Appears to be used when accepting a resurrection will give you resurrection sickessness
ResurrectHasTimer ()  /WoW API/\n  Does the player have to wait before accepting a resurrection
RetrieveCorpse ()  /WoW API/\n  Resurrects when near corpse. e.g., The "Accept" button one sees after running back to your body
ReturnInboxItem (index)  /WoW API/\n  Returns to the sender the attached item in the mail message at the specified index
RollOnLoot (rollId[, roll])  /WoW API/\n  Roll or pass on a loot event started by the game engine
RunBinding ("command"[, "up"])  /WoW API/\n  Executes the key binding named "command"
RunMacro(id|"name") PROTECTED\n  Run the macro
RunMacroText ("macro")  /WoW API/ PROTECTED\n  Interpret the given string as a macro and run it
RunScript ("script")  /WoW API/\n  Execute "script" as a block of LUA code
SaveBindings (which)  /WoW API/\n  Saves account or character specific key bindings from memory to disk
SaveView (index)  /WoW API/\n  Replaces the specified (1-5) predefined camera positions with the current camera position
Screenshot ()  /WoW API/\n  Takes a screenshot
SelectActiveQuest ()  /WoW API/\n  Selects an active quest from the NPC (only available after QUEST_GREETING event)
SelectAvailableQuest ()  /WoW API/\n  Selects an available quest from the NPC (only available after QUEST_GREETING event)
SelectCraft (index)  /WoW API/
SelectGossipActiveQuest (index)  /WoW API/\n  Selects an active quest
SelectGossipAvailableQuest (index)  /WoW API/\n  Selects an available quest
SelectGossipOption (index)  /WoW API/\n  Selects on a gossip item
SelectPackage (index)  /WoW API/\n  Not yet fully implemented. It does nothing visible
SelectQuestLogEntry ()  /WoW API/\n  Sets the selected quest, required for most GetQuest functions
SelectStationery (index)  /WoW API/\n  Not yet fully implemented. It does nothing visible
SelectTradeSkill (index)  /WoW API/\n  Select a specific trade skill in the list
SelectTrainerService
SendAddonMessage ("prefix", "text", "type")  /WoW API/\n  Sends a message to hidden AddOn channels.   - Added in 1.12
SendChatMessage ("msg",[ "chatType",[ "language",[ "channel"]]])  /WoW API/\n  Sends a chat message
SendMail ("target", "subject", "body")  /WoW API/\n  If the mailbox is open, this sends mail. --Buttahcup 4 Feb 2005
SendWho ("filter")  /WoW API/\n  Send a who request to the server
SetAbandonQuest ()  /WoW API/\n  Called before AbandonQuest
SetActionBarToggles (show1,show2,show3,show4[, alwaysShow])  /WoW API/\n  Set show toggle for each action bar   - 'alwaysShow' added in 1.12
SetActionSelfCastKey ("SHIFT" or "CTRL" or "ALT")  /WoW API/
SetAutoLootDefault(true/false)
SetAutoLootToggleKey ("SHIFT" or "CTRL" or "ALT")  /WoW API/
SetBagPortaitTexture (texture, slot)  /WoW API/
SetBaseMip (value)  /WoW API/\n  Set the world appearance Texture Detail (0,1)
SetBattlefieldScoreFaction ([faction])  /WoW API/\n  Set the faction to show on the battlefield scoreboard
SetBinding ("key"[, "command"])  /WoW API/\n  Sets or unsets key bindings. (2.0 - Can not be used in combat.)
SetBindingClick ("KEY", "ButtonName" [,"mouseButton"])  /WoW API/\n  Set a key binding directly to a Button object. The click sends a mouse down when the key is pressed, and a mouse up when it is released
SetBindingItem ("KEY", "itemname")  /WoW API/
SetBindingMacro("KEY", "macroname"|macroid)
SetBindingSpell ("KEY", "Spell Name")  /WoW API/\n  Set a key binding directly to a spell, uses the same spell name syntax as /cast
SetCVar ("cvar", value[, "scriptCVar"])  /WoW API/\n  Set the value of a variable in config.wtf
SetChannelOwner ("channel", "name")  /WoW API/\n  Sets the channel owner
SetChannelPassword ("channel", "password")  /WoW API/\n  Changes the password of the current channel
SetChatWindowAlpha (index, alpha)  /WoW API/\n  Sets the Alpha value (transparency)  /WoW API/ of ChatFrame<index>
SetChatWindowColor (index, r, g, b)  /WoW API/\n  Sets the background color of a a chat window
SetChatWindowDocked (index, docked)  /WoW API/\n  Set whether a chat window is docked
SetChatWindowLocked (index, locked)  /WoW API/\n  Sets ChatFrame<index> so that it is or is not movable
SetChatWindowName (index, "name")  /WoW API/\n  Sets the name of ChatFrame<index> to <"name">
SetChatWindowShown (index, shown)  /WoW API/\n  Shows or Hides ChatFrame<index> depending on value of <shown>
SetChatWindowSize (index, size)  /WoW API/\n  Sets the font size of a chat window
SetConsoleKey ("key")  /WoW API/\n  Sets the console key (normally "`")
SetCursor ("cursor" or nil)  /WoW API/
SetDoodadAnim ()  /WoW API/
SetDungeonDifficulty (difficulty)  /WoW API/\n  Sets the player's Dungeon Difficulty setting (for the 5-man instances)
SetEuropeanNumbers (flag)  /WoW API/\n  Sets the decimal separator to a comma instead of a dot
SetFactionActive (index)  /WoW API/\n  Remove a faction from inactive group. (New in 1.10)
SetFactionInactive (index)  /WoW API/\n  Move a faction to inactive group. (New in 1.10)
SetFarclip (value)  /WoW API/\n  Set the world appearance Terrain Distance (177-777)
SetGamma (value)  /WoW API/
SetGuildInfoText ()  /WoW API/\n  Sets the persistant Guild Information data. Limit is 500 letters (GuildInfoEditBox is limited to this number).\n  Longer texts are possible, but will be reseted during the day. (new in 1.9)
SetGuildRosterSelection (index)  /WoW API/\n  Selects/deselects a guild member according current sorting order
SetGuildRosterShowOffline (enabled)  /WoW API/\n  Sets/Resets the show offline members flag
SetInventoryPortaitTexture ()  /WoW API/
SetLayoutMode ()  /WoW API/
SetLookingForGroup (flag)  /WoW API/
SetLootMethod ("lootMethod"[, "masterPlayer" or threshold])  /WoW API/\n  Set the current loot method
SetLootPortrait ()  /WoW API/
SetLootThreshold (itemQuality)  /WoW API/\n  Set the threshold for group/master loot
SetMapToCurrentZone ()  /WoW API/\n  Sets the current world map to the zone the player is presently in
SetMapZoom (continentIndex[, zoneIndex])  /WoW API/\n  Sets the current world map to a specific continent and optionally zone
SetMouselookOverrideBinding ("KEY" [,"COMMAND"])  /WoW API/
SetMultisampleFormat (index)  /WoW API/\n  Set the multi-sample (antialias) format to use
SetOverrideBinding (owner, isPriority, "KEY" [,"COMMAND"])  /WoW API/\n  Set (or clear) an override key binding
SetOverrideBindingClick (owner, isPriority, "KEY", "ButtoName"[,"mouseButton"])  /WoW API/
SetOverrideBindingItem (owner, isPriority, "KEY", "itemname")  /WoW API/
SetOverrideBindingMacro(owner, isPriority, "KEY", "macroname"|macroid)
SetOverrideBindingSpell (owner, isPriority, "KEY", "spellname")  /WoW API/
SetPartyAssignment ("assignment", player)  /WoW API/
SetPetStablePaperdoll (modelObject)  /WoW API/
SetPortraitTexture (texture,"unit")  /WoW API/\n  Paint a Texture object with the specified unit's portrait
SetPortraitToTexture ("texture", icon)  /WoW API/\n  Paint a Texture object with the given Texture ?
SetRaidRosterSelection (index)  /WoW API/
SetRaidSubgroup (index, subgroup)  /WoW API/\n  Move a raid member from his current subgroup into a different (non-full) subgroup
SetRaidTarget ("unit", index)  /WoW API/\n  Set the raid target index for a unit
SetScreenResolution (x)  /WoW API/
SetSelectedAuctionItem ("type", index)  /WoW API/
SetSelectedBattlefield (index)  /WoW API/\n  Select the battlefield instance you want to join or the first one that becomes available
SetSelectedFaction (index)  /WoW API/\n  Sets the currently selected faction in reputation window. (New in 1.10)
SetSelectedFriend (index)  /WoW API/\n  Update the current selected friend
SetSelectedIgnore (index)  /WoW API/
SetSelectedSkill (index)  /WoW API/
SetSendMailCOD (amount)  /WoW API/ PROTECTED\n  Make next mail sent using SendMail() COD target for amount. --Broken by WoW 2.0 changes Mike-N-Go 15 Feb. 2007
SetSendMailMoney (amount)  /WoW API/ PROTECTED\n  Add money to next mail sent using SendMail(). --Broken by WoW 2.0 changes Mike-N-Go 15 Feb. 2007
SetTaxiMap (frame)  /WoW API/
SetTerrainMip (value)  /WoW API/\n  Set the world appearance Terrain Texture (0,1)
SetTexLodBias ()  /WoW API/
SetTradeMoney (amount)  /WoW API/
SetTradeSkillInvSlotFilter (slotIndex, onOff[, exclusive] )  /WoW API/\n  Set the inventory slot type filter
SetTradeSkillSubClassFilter (slotIndex, onOff[, exclusive] )  /WoW API/\n  Set the subclass filter
SetTrainerServiceTypeFilter ("filter", state)  /WoW API/\n  Sets the status of a skill filter in the trainer window
SetTrainerSkillLineFilter ()  /WoW API/
SetView (index)  /WoW API/\n  Sets camera position to a specified (1-5) predefined camera position
SetWatchedFactionIndex (index)  /WoW API/\n  Sets which faction should be watched in Blizzard reputation bar. (New in 1.10)
SetWaterDetail ()  /WoW API/
SetWhoToUI (toUIFlag)  /WoW API/\n  Indicate that who request results should be delivered as WHO_LIST_UPDATE instead of to chat
SetWorldDetail (value)  /WoW API/\n  Set the world appearance Environment Detail (0,1,2)
SetupFullscreenScale ()  /WoW API/\n  Configures scale of full-screen views, such as the world map, to best fill screen
ShowBattlefieldList (index)  /WoW API/\n  Displays a queue window for the specified battlefield.\n  Only works if you are already in a queue for the battlefield. Index corresponds to location in queue array
ShowCloak (flag)  /WoW API/\n  Set whether player's cloak is displayed
ShowContainerSellCursor (index, slot)  /WoW API/
ShowFriendNameplates ()  /WoW API/\n  Turn on display of nameplates above friendly units.   - Added in 1.12
ShowFriends ()  /WoW API/\n  Request updated friends information from server
ShowHelm (flag)  /WoW API/\n  Set whether player's helm is displayed
ShowInspectCursor ()  /WoW API/\n  Change the cursor to the magnifying glass inventory inspection cursor
ShowInventorySellCursor ()  /WoW API/
ShowMerchantSellCursor (index)  /WoW API/\n  Changes the cursor to the merchant sell cursor
ShowNameplates ()  /WoW API/\n  Turn on display of nameplates
ShowRepairCursor ()  /WoW API/
ShowWorldMapArrowFrame (bool)  /WoW API/\n  show or hide the arrow representing the player
ShowingCloak ()  /WoW API/\n  Return 1 if player's cloak is displayed, nil otherwise
ShowingHelm ()  /WoW API/\n  Return 1 if player's helm is displayed, nil otherwise
SignPetition ()  /WoW API/
SitOrStand ()  /WoW API/\n  The player sits or stands
SortAuctionItems ("type", "sort")  /WoW API/\n  Request that the specified auction list be sorted by a specific column
SortGuildRoster ("sort")  /WoW API/\n  Sorts guildroster according "sort". Any unknown values sort on "name"
SortWho (sortType)  /WoW API/\n  Sorts an existing /who list; displays the Who List frame if not visible
SpellCanTargetUnit ("unit")  /WoW API/\n  Returns true if the spell awaiting target selection can be cast on the specified unit
SpellHasRange (spell)  /WoW API/
SpellIsTargeting ()  /WoW API/\n  Returns true if a spell has been cast and is awaiting target selection
SpellStopCasting ()  /WoW API/ PROTECTED\n  Stops the current spellcast.\n  (As of 1.10 PTR, this function must be used in direct response to a hardware input event, such as a mouse click or key press.)
SpellStopTargeting ()  /WoW API/ PROTECTED\n  Cancels the spell awaiting target selection
SpellTargetUnit ("unit")  /WoW API/ PROTECTED\n  Casts the spell awaiting target selection on the specified unit
SplitContainerItem (bagID, slot, amount)  /WoW API/
StablePet (index)  /WoW API/
StartAuction (minBid, buyoutPrice, runTime)  /WoW API/\n  Starts the auction you have created in the Create Auction panel
StartDuel ("name")  /WoW API/ PROTECTED\n  Challenge someone to a duel (by name) -- protected with patch 2.0!
StartDuelUnit ("unit")  /WoW API/\n  Challenge a unit to a duel
StopAttack ()  /WoW API/\n  Turns off auto-attack, if currently active. Has no effect is the player does not currently have auto-attack active
StopCinematic ()  /WoW API/
StopMusic ()  /WoW API/\n  Stops the currently playing mp3
StrafeLeftStart ()  /WoW API/ PROTECTED\n  The player begins strafing left at the specified time
StrafeLeftStop ()  /WoW API/ PROTECTED\n  The player stops strafing left at the specified time
StrafeRightStart ()  /WoW API/ PROTECTED\n  The player begins strafing right at the specified time
StrafeRightStop ()  /WoW API/ PROTECTED\n  The player stops strafing right at the specified time
Stuck ()  /WoW API/\n  Informs the game engine that the player is Stuck
SubmitNumbers ()  /WoW API/\n  ?   - Added in 1.12
SwapRaidSubgroup (index1, index2)  /WoW API/\n  Swaps raid members into different groups
TakeInboxItem (index)  /WoW API/\n  Take the attached item from the mailbox message at index
TakeInboxMoney (index)  /WoW API/\n  Take the attached money from the mailbox message at index
TakeInboxTextItem (index)  /WoW API/\n  Creates a permanent copy of letter (readable "Plain Letter")
TakeTaxiNode (slot)  /WoW API/\n  Takes the named taxi node
TargetLastEnemy ()  /WoW API/ PROTECTED\n  Selects the last targetted enemy as the current target
TargetLastTarget ()  /WoW API/ PROTECTED\n  Selects the last target as the current target
TargetNearestEnemy ([reverseFlag])  /WoW API/ PROTECTED\n  Selects the nearest enemy as the current target
TargetNearestFriend ()  /WoW API/ PROTECTED\n  Selects the nearest friendly unit as the current target
TargetNearestPartyMember ()  /WoW API/ PROTECTED\n  Selects the nearest Party member as the current target
TargetNearestRaidMember ()  /WoW API/ PROTECTED\n  Selects the nearest Raid member as the current target
TargetUnit ("unit")  /WoW API/ PROTECTED\n  Selects the specified unit as the current target. -- Protected with Patch 2.0!
TaxiGetDestX (slot, hop)  /WoW API/
TaxiGetDestY (slot, hop)  /WoW API/
TaxiGetSrcX (slot, hop)  /WoW API/
TaxiGetSrcY (slot, hop)  /WoW API/
TaxiNodeCost (slot)  /WoW API/\n  Returns the cost in copper of a node
TaxiNodeGetType (slot)  /WoW API/\n  Returns the status of a node
TaxiNodeName (slot)  /WoW API/\n  Returns the name of a node
TaxiNodePosition (slot)  /WoW API/\n  Returns position (x,y) of node on the map
TaxiNodeSetCurrent (slot)  /WoW API/\n  Renumbers slots based on new current slot
ToggleAutoRun ()  /WoW API/ PROTECTED\n  Turns auto-run on or off
ToggleBattlefieldMinimap ()  /WoW API/\n  Toggles the Battlefield Minimap
ToggleCollision ()  /WoW API/
ToggleCollisionDisplay ()  /WoW API/
ToggleMouseMove ()  /WoW API/
TogglePVP ()  /WoW API/\n  Toggles PVP Status
TogglePerformanceDisplay ()  /WoW API/
TogglePerformanceValues ()  /WoW API/
TogglePetAutocast (index)  /WoW API/ PROTECTED\n  Toggles whether the specified pet ability should autocast or not
TogglePlayerBounds ()  /WoW API/
TogglePortals ()  /WoW API/
ToggleRun ()  /WoW API/ PROTECTED\n  Toggle between running and walking
ToggleSheath ()  /WoW API/\n  Toggles sheathed or unsheathed weapons
ToggleSpellAutocast (index, bookIndex)  /WoW API/\n  Toggles whether the specified pet ability should autocast or not. (in the spellbook)
ToggleTris ()  /WoW API/
TurnInGuildCharter ()  /WoW API/
TurnLeftStart ()  /WoW API/ PROTECTED\n  The player starts turning left at the specified time
TurnLeftStop ()  /WoW API/ PROTECTED\n  The player stops turning left at the specified time
TurnOrActionStart ()  /WoW API/ PROTECTED\n  Begin "Right Click" in the 3D world. (1.10 - Protected)
TurnOrActionStop ()  /WoW API/ PROTECTED\n  End "Right Click" in the 3D world. (1.10 - Protected)
TurnRightStart ()  /WoW API/ PROTECTED\n  The player starts turning right at the specified time
TurnRightStop ()  /WoW API/ PROTECTED\n  The player stops turning right at the specified time
TutorialsEnabled ()  /WoW API/
UninviteFromRaid (index)  /WoW API/\n  Boots someone from a raid
UninviteUnit ("unit" or "name")  /WoW API/\n  Kick a unit from the party if player is group leader
UnitAffectingCombat ("unit")  /WoW API/\n  Determine if the unit is in combat or has aggro. (returns nil if "false" and 1 if "true")
UnitArmor ("unit")  /WoW API/\n  Returns the armor statistics relevant to the specified unit
UnitAttackBothHands ("unit")  /WoW API/\n  Returns information about the unit's melee attacks
UnitAttackPower ("unit")  /WoW API/\n  Returns the unit's melee attack power and modifiers
UnitAttackSpeed ("unit")  /WoW API/\n  Returns the unit's melee attack speed for each hand
UnitBuff ("unit", index [,raidFilter])  /WoW API/\n  Retrieves info about a buff of a certain unit. (Updated in 2.0)
UnitCanAssist ("unit", "otherUnit")  /WoW API/\n  Returns true if the first unit can assist the second, false otherwise
UnitCanAttack ("unit", "otherUnit")  /WoW API/\n  Returns true if the first unit can attack the second, false otherwise
UnitCanCooperate ("unit", "otherUnit")  /WoW API/\n  Returns true if the first unit can cooperate with the second, false otherwise
UnitCastingInfo ("unit")  /WoW API/\n  Returns spell, rank, displayName, icon, startTime, endTime
UnitChannelInfo ("unit")  /WoW API/\n  Returns spell, rank, displayName, icon, startTime, endTime
UnitCharacterPoints ("unit")  /WoW API/\n  Returns the number of unspent talent points for the specified unit -- usually 0
UnitClass ("unit")  /WoW API/\n  Returns the class name of the specified unit (e.g., "Warrior" or "Shaman")
UnitClassification ("unit")  /WoW API/\n  Returns the classification of the specified unit (e.g., "elite" or "worldboss")
UnitCreatureFamily ("unit")  /WoW API/\n  Returns the type of creature of the specified unit (e.g., "Crab")
UnitCreatureType ("unit")  /WoW API/\n  Returns the classification type of creature of the specified unit (e.g., "Beast")
UnitDamage ("unit")  /WoW API/\n  Returns the damage statistics relevant to the specified unit
UnitDebuff ("unit", index [,raidFilter])  /WoW API/\n  Retrieves info about a debuff of a certain unit. (Updated in 2.0)
UnitDefense ("unit")  /WoW API/\n  Returns the base defense skill of the specified unit
UnitExists ("unit")  /WoW API/\n  Returns true if the specified unit exists, false otherwise
UnitFactionGroup ("unit")  /WoW API/\n  Returns the faction group id and name of the specified unit. (eg. "Alliance")   - string returned is localization-independent (used in filepath)
UnitHealth ("unit")  /WoW API/\n  Returns the current health, in points, of the specified unit
UnitHealthMax ("unit")  /WoW API/\n  Returns the maximum health, in points, of the specified unit
UnitInParty ("unit")  /WoW API/\n  Returns true if the unit is a member of your party
UnitInRaid ("unit")  /WoW API/\n  Returns 1 if unit is in your raid, nil if not
UnitIsAFK ("unit")  /WoW API/\n  Only works for friendly units
UnitIsCharmed ("unit")  /WoW API/\n  Returns true if the specified unit is charmed, false otherwise
UnitIsCivilian ("unit")  /WoW API/\n  Returns true if the unit is a civilian NPC
UnitIsConnected ("unit")  /WoW API/\n  Returns 1 if the specified unit is connected or npc, nil if offline or not a valid unit
UnitIsCorpse ("unit")  /WoW API/\n  Returns true if the specified unit is a corpse, false otherwise
UnitIsDND ("unit")  /WoW API/
UnitIsDead ("unit")  /WoW API/\n  Returns true if the specified unit is dead, nil otherwise
UnitIsDeadOrGhost ("unit")  /WoW API/\n  Returns true if the specified unit is dead or a ghost, nil otherwise
UnitIsEnemy ("unit", "otherUnit")  /WoW API/\n  Returns true if the specified units are enemies, false otherwise
UnitIsFriend ("unit", "otherUnit")  /WoW API/\n  Returns true if the specified units are friends (PC of same faction or friendly NPC), false otherwise
UnitIsGhost ("unit")  /WoW API/\n  Returns true if the specified unit is a ghost, false otherwise
UnitIsPVP ("unit")  /WoW API/\n  Returns true if the specified unit is flagged for PVP, false otherwise
UnitIsPVPFreeForAll ("unit")  /WoW API/\n  Returns true if the specified unit is flagged for free-for-all PVP, false otherwise
UnitIsPartyLeader ("unit")  /WoW API/\n  Returns true if the unit is the leader of its party
UnitIsPlayer ("unit")  /WoW API/\n  Returns true if the specified unit is a player character, false otherwise
UnitIsPlusMob ("unit")  /WoW API/\n  Returns true if the specified unit is a mob, more powerful than its nominal level, false otherwise (e.g., "elite" mobs)
UnitIsTapped ("unit")  /WoW API/\n  Returns true if the specified unit is tapped, false otherwise
UnitIsTappedByPlayer ("unit")  /WoW API/\n  Returns true if the specified unit is tapped by the player himself, otherwise false
UnitIsTrivial ("unit")  /WoW API/\n  Returns true if the specified unit is trivial (Trivial means the unit is "grey" to the player. false otherwise
UnitIsUnit ("unit", "otherUnit")  /WoW API/\n  Determine if two units are the same unit
UnitIsVisible ("unit")  /WoW API/\n  1 if visible, nil if not
UnitLevel ("unit")  /WoW API/\n  Returns the level of a unit
UnitMana ("unit")  /WoW API/\n  Returns the current mana (or energy,rage,etc), in points, of the specified unit
UnitManaMax ("unit")  /WoW API/\n  Returns the maximum mana (or energy,rage,etc), in points, of the specified unit
UnitName ("unit")  /WoW API/\n  Returns the name (and realm name) of a unit
UnitOnTaxi ("unit")  /WoW API/\n  Returns 1 if unit is on a taxi
UnitPVPName ("unit")  /WoW API/\n  Returns unit's name with PvP rank prefix (e.g., "Corporal Allianceguy")
UnitPVPRank ("unit")  /WoW API/\n  Get PvP rank information for requested unit
UnitPlayerControlled ("unit")  /WoW API/\n  Returns true if the specified unit is controlled by a player, false otherwise
UnitPlayerOrPetInParty ("unit")  /WoW API/\n  Returns 1 if the specified unit/pet is a member of the player's party, nil otherwise (returns 1 for "player" and "pet")   - Added in 1.12
UnitPlayerOrPetInRaid ("unit")  /WoW API/\n  Returns 1 if the specified unit/pet is a member of the player's raid, nil otherwise (returns 1 for "player" and "pet")   - Added in 1.12
UnitPowerType ("unit")  /WoW API/\n  Returns a number corresponding to the power type (e.g., mana, rage or energy) of the specified unit
UnitRace ("unit")  /WoW API/\n  Returns the race name of the specified unit (e.g., "Human" or "Troll")
UnitRangedAttack ("unit")  /WoW API/\n  Returns the ranged attack number of the unit
UnitRangedAttackPower ("unit")  /WoW API/\n  Returns the ranged attack power of the unit
UnitRangedDamage ("unit")  /WoW API/\n  Returns the ranged attack speed and damage of the unit
UnitReaction ("unit", "otherUnit")  /WoW API/\n  Returns a number corresponding to the reaction (aggressive, neutral or friendly) of the first unit towards the second unit
UnitResistance ("unit", "resistanceIndex")  /WoW API/\n  Returns the resistance statistics relevant to the specified unit and resistance type
UnitSex ("unit")  /WoW API/\n  Returns a code indicating the gender of the specified unit, if known. (1=unknown, 2=male, 3=female) < changed in 1.11!
UnitStat ("unit", statIndex)  /WoW API/\n  Returns the statistics relevant to the specified unit and basic attribute (e.g., strength or intellect)
UnitXP ("unit")  /WoW API/\n  Returns the number of experience points the specified unit has in their current level. (only works on your player)
UnitXPMax ("unit")  /WoW API/\n  Returns the number of experience points the specified unit needs to reach their next level. (only works on your player)
UnstablePet (index)  /WoW API/
UpdateGMTicket (type, "text")  /WoW API/
UpdateInventoryAlertStatus ()  /WoW API/
UpdateMapHighlight (x, y)  /WoW API/\n  Provides map rollover information for highlighting
UpdateSpells ()  /WoW API/
UpdateWorldMapArrowFrames ()  /WoW API/\n  update the orientation of the arrow cursor based on the current player orientation
UseAction (slot[, checkCursor[, onSelf]])  /WoW API/ PROTECTED\n  This instructs the interface to use the action associated with the specified ID, optionally on the player (regardless of target)(2.0 - Protected)
UseContainerItem (bagID, slot[, onSelf])  /WoW API/ PROTECTED\n  Uses an item located in bag# and slot#. (Warning: If a vendor window is open, using items in your pack may sell them!)   - 'onSelf' added in 1.12
UseInventoryItem (invSlot)  /WoW API/ PROTECTED\n  Use an item in a specific inventory slot
UseSoulstone ()  /WoW API/\n  Use an active soulstone to resurrect yourself after death

debuginfo ()  /WoW API/\n  Output win32 debug text. Freeware debug message viewer: DebugView (Has no effect on live server)
debugprofilestart ()  /WoW API/\n  starts a timer for profiling during debugging
debugprofilestop ()  /WoW API/\n  return the time in milliseconds since the last call to debugprofilestart()
debugstack (start, count1, count2)  /WoW API/\n  Returns a string representation of the current calling stack (as of 1.9)
getglobal ("object")  /WoW API/\n  Given an object name will return the object itself
hooksecurefunc ([table,] "functionName", hookfunc)  /WoW API/\n  Creates a secure 'post hook' for the named function. The hookfunc is invoked after the original function, and receives the same parameters.\n  Return values from hookfunc are discarded. This is the only safe way to hook functions that execute protected functionality
issecure ()  /WoW API/\n  Determine if the current environment is secure
issecurevariable ([table,] "name")  /WoW API/\n  Determine if the specified variable is secure
securecall(function or "functionName", ...)\n  Call a function from a secure environment without risking secure status
setglobal ("object", value)  /WoW API/\n  Set the global "object" to the given value

SetTooltipMoney (tooltip, amount)  /WoW API/ UI\n  Set tooltip money value
ActionButtonDown (id)  /WoW API/ PROTECTED UI\n  Press the specified action button. (2.0 Protected)
ActionButtonUp (id)  /WoW API/ PROTECTED UI\n  Release the specified action button. (2.0 Protected)
BonusActionButtonDown ()  /WoW API/ UI\n  Trigger the specified bonus (pet or minion) action button
BonusActionButtonUp ()  /WoW API/ UI\n  Release the specified bonus (pet or minion) action button
CloseAllBags ()  /WoW API/ UI\n  Close all bags
DressUpItem (itemId)  /WoW API/ UI\n  Will show the DressingRoom UI with the given item ID equipped
DressUpItemLink ("itemString" or "itemLink")  /WoW API/ UI\n  Will show the DressingRoom UI with the given item equipped
GetBindingText ("key", "prefix")  /WoW API/ UI\n  Gets the string value for the key
InspectUnit ("unit")  /WoW API/ UI\n  Inspects the specified / selected "unit"
MouseIsOver ()  /WoW API/ UI\n  Determines whether or not the mouse is over the specified frame
OpenAllBags ()  /WoW API/ UI\n  Open all bags
ReloadUI ()  /WoW API/\n  Reloads the UI from source files
SecondsToTime ()  /WoW API/ UI\n  Converts a number of seconds into a readable days / hours / etc. formatted string
SetDressUpBackground (isAuctionFrame)  /WoW API/ UI\n  Given an Item shown in the Auction House will show the DressingRoom UI with the item equipped
SetItemRef (link, text, button)  /WoW API/ UI\n  Handles item link tooltips in chat
TakeScreenshot ()  /WoW API/ UI\n  Takes a screenshot
ToggleBackpack ()  /WoW API/ UI\n  Toggles your backpack open/closed
ToggleBag (bagID)  /WoW API/ UI\n  Opens or closes the specified bag
ToggleCharacter (index)  /WoW API/ UI\n  Toggles the character pane to the specified frame
ToggleCombatLog ()  /WoW API/ UI\n  Opens/closes the combat log
ToggleDropDownMenu (level, value, dropDownFrame, anchorName, xOffset, yOffset)  /WoW API/ UI
ToggleFramerate ()  /WoW API/ UI\n  Show/Hide the FPS
ToggleFriendsFrame ([tabNumber])  /WoW API/ UI\n  Opens/closes the friends pane (possibly on a specific tab)
ToggleGameMenu ()  /WoW API/ PROTECTED UI\n  Opens/closes the game menu. Seems this function is now protected
ToggleHelpFrame ()  /WoW API/ UI\n  Opens the Help Request frame
ToggleKeyRing ()  /WoW API/ UI\n  Opens/closes the key ring
ToggleMinimap ()  /WoW API/ UI\n  Turns the minimap display on/off
ToggleQuestLog ()  /WoW API/ UI\n  Opens/closes the quest log
ToggleSpellBook ("bookType")  /WoW API/ UI\n  Shows the spellbook. Can show your spells or your pet's
ToggleTalentFrame ()  /WoW API/ UI\n  Opens the Talent frame
ToggleWorldMap ()  /WoW API/ UI\n  Turns the world map on/off
UIFrameFadeIn (frame, fadeTime, startAlpha, endAlpha)  /WoW API/ UI
UIFrameFlash(...) UI
UIParentLoadAddOn ("AddOnName")  /WoW API/ UI\n  Loads or Reloads the specified AddOn, and pops up an error message if it fails to load for any reason
_ERRORMESSAGE (value)  /WoW API/ UI\n  Displays the script error dialog with optional text
geterrorhandler ()  /WoW API/ UI
message ("text")  /WoW API/ UI\n  Displays a message box with your text message and an "Okay" button
seterrorhandler (function)  /WoW API/ UI

ChatFrame_AddChannel (chatFrame, "channelName")  /WoW API/ UI\n  Activate channel in chatFrame
ChatFrame_OnHyperlinkShow (reference, link, button)  /WoW API/ UI\n  called when the user clicks on a chatlink

SendMailBodyEditBox:SetText (text)  /WoW API/ UI\n  Sets the text of the Body box
SendMailMoneyCopper:SetText (amount)  /WoW API/ UI\n  Sets the money in the Copper pane of the Mail Frame
SendMailMoneyGold:SetText (amount)  /WoW API/ UI\n  Sets the money in the Gold pane of the Mail Frame
SendMailMoneySilver:SetText (amount)  /WoW API/ UI\n  Sets the money in the Silver pane of the Mail Frame
SendMailNameEditBox:SetText (text)  /WoW API/ UI\n  Sets the text of the Recipient box
SendMailSubjectEditBox:SetText (text)  /WoW API/ UI\n  Sets the text of the Subject box
SendMailRadioButton_OnClick (index)  /WoW API/ UI\n  An index of 1 sets the mail button to "Send Money", otherwise it is set to "C.O.D.". This only works if the "Send Mail" tab of the Mail Box is open

##### These are custom string functions available in WoW but not normal Lua.
strtrim (string)  /WoW API/\n   - Trim leading and trailing spaces from string. 
strsplit (delimiter, string)  /WoW API/\n   - Return a list of substrings separated by occurrences of the delimiter. 
strjoin(delimiter, string[, ...])\n   - Join string arguments into a single string using delimiter as join symbol.

##### World of Warcraft includes the Lua BitLib library. They provide access to C-style bitwise manipulation operators. Implemented in WoW with patch 1.9
bit.bnot (a)  /WoW API/\n   - returns the one's complement of a 
bit.band (w1,...)  /WoW API/\n   - returns the bitwise and of the w's 
bit.bor (w1,...)  /WoW API/\n   - returns the bitwise or of the w's 
bit.bxor (w1,...)  /WoW API/\n   - returns the bitwise exclusive or of the w's 
bit.lshift (a,b)  /WoW API/\n   - returns a shifted left b places 
bit.rshift (a,b)  /WoW API/\n   - returns a shifted logically right b places 
bit.arshift (a,b)  /WoW API/\n   - returns a shifted arithmetically right b places 
bit.mod (a,b)  /WoW API/\n   - returns the integer remainder of a divided by b

SecureActionButtonTemplate  /WoW API/\n  Very versatile button used for all kinds of click\ncast style action
SecureUnitButtonTemplate  /WoW API/\n  A variant of SecureActionButtonTemplate used for unit buttons
SecureStateHeaderTemplate  /WoW API/\n  Basic template for powerful state\nbased actions
SecureStateDriverTemplate  /WoW API/\n  Variant of the SecureStateHeaderTemplate especially for stance/shapeshift/actionbar changes
SecureAnchorButtonTemplate  /WoW API/\n  Click\ntrigger for drop down and pop up uses
SecureAnchorEnterTemplate  /WoW API/\n  Mouseover\ntrigger for drop down and pop up uses
SecureAnchorUpDownTemplate  /WoW API/\n  MouseUp/Down\ntrigger for drop down and pop up uses
SecurePieButtonTemplate  /WoW API/\n  Used for creating radial menus
SecurePartyHeaderTemplate  /WoW API/\n  Used for managing party members
SecureRaidGroupHeaderTemplate  /WoW API/\n  Used for managing raid members
UIDropDownMenu  /WoW API/\n  The base class for Drop Down Menus

UIObject  /WoW API/ \n  This is an abstract UI object type which cannot actually be created. It's a base of all UI objects.
FontInstance  /WoW API/ \n  This is an abstract object type that groups together a number of font related methods that are used by multiple other widget types.\n  Has all of the methods from UIObject
Region  /WoW API/ \n  This is an abstract object type which cannot actually be created. It gathers together a number of common methods which have identical behaviours across all widget types.\n  Has all of the methods from UIObject
Font  /WoW API/ \n  This object was introduced in 1.10 to replace virtual FontStrings, it allows for dynamic inheritance of font template changes.\n  Has all of the methods from UIObject and FontInstance
Frame  /WoW API/ \n  has all of the methods from UIObject and Region
LayeredRegion  /WoW API/ \n  has all of the methods from UIObject and Region
Button  /WoW API/ \n  has all of the methods from UIObject, Region and Frame
Cooldown  /WoW API/ \n  has all of the methods from UIObject, Region and Frame
ColorSelect  /WoW API/ \n  has all of the methods from UIObject, Region and Frame
EditBox  /WoW API/ \n  has all of the methods from UIObject, FontInstance, Region and Frame
GameTooltip  /WoW API/ \n  has all of the methods from UIObject, Region and Frame
MessageFrame  /WoW API/ \n  has all of the methods from UIObject, FontInstance, Region and Frame
Minimap  /WoW API/ \n  has all of the methods from UIObject, Region and Frame
Model  /WoW API/ \n  Used to display real 3D\nmesh geometry as part of the UI.\n  has all of the methods from UIObject, Region and Frame
ScrollFrame  /WoW API/ \n  has all of the methods from UIObject, Region and Frame
ScrollingMessageFrame  /WoW API/ \n  has all of the methods from UIObject, FontInstance, Region and Frame
SimpleHTML  /WoW API/ \n  has all of the methods from UIObject, Region and Frame
Slider  /WoW API/ \n  has all of the methods from UIObject, Region and Frame
StatusBar  /WoW API/ \n  has all of the methods from UIObject, Region and Frame
CheckButton  /WoW API/ \n  has all of the methods from UIObject, Region, Frame and Button
LootButton  /WoW API/ \n  has all of the methods from UIObject, Region, Frame and Button
PlayerModel  /WoW API/ \n  has all of the methods from UIObject, Region, Frame and Model
DressUpModel  /WoW API/ \n  has all of the methods from UIObject, Region, Frame, Model and PlayerModel
TabardModel  /WoW API/ \n  has all of the methods from UIObject, Region, Frame, Model and PlayerModel
Texture  /WoW API/ \n  has all of the methods from UIObject, Region and LayeredRegion
FontString  /WoW API/ \n  has all of the methods from UIObject, FontInstance, Region and LayeredRegion

AddDoubleLine (textL, textR, rL, gL, bL, rR, gR, bR)  /WoW API/  method of GameTooltip
AddFontStrings (leftstring, rightstring)  /WoW API/  method of GameTooltip\n  Dynamically expands the size of a tooltip - New in 1.11.
AddHistoryLine ("text")  /WoW API/  method of EditBox\n  Add text to the edit history.
AddLine ()  /WoW API/  method of GameTooltip
AddMessage ("text", r, g, b, a, holdTime)  /WoW API/  method of MessageFrame\n  Add a message to the frame which will fade eventually.
AddMessage ("text"[, r, g, b[, id]])  /WoW API/  method of ScrollingMessageFrame\n  Add a message to the frame, with an optional color ID.
AdvanceTime ()  /WoW API/  method of Model
AppendText ("text")  /WoW API/  method of GameTooltip\n  Append text to the end of the first line of the tooltip.
AtBottom ()  /WoW API/  method of ScrollingMessageFrame\n  Test whether frame is at the bottom.
AtTop ()  /WoW API/  method of ScrollingMessageFrame\n  Test whether frame is at the top - New in 1.11.
CanNonSpaceWrap ()  /WoW API/  method of FontString\n  Get whether long strings without spaces are wrapped or truncated - New in 1.11.
CanSaveTabardNow ()  /WoW API/  method of TabardModel\n  Indicate if the tabard can be saved.
Clear ()  /WoW API/  method of MessageFrame\n  Clear the messages from the frame - New in 1.11.
Clear ()  /WoW API/  method of ScrollingMessageFrame\n  Clear all lines from the frame.
ClearAllPoints ()  /WoW API/  method of Region\n  Clear all attachment points for this object.
ClearFocus ()  /WoW API/  method of EditBox
ClearFog ()  /WoW API/  method of Model\n  Removes all fogging effects currently active in rendering.
ClearLines ()  /WoW API/  method of GameTooltip
ClearModel ()  /WoW API/  method of Model\n  Removes all geometry from the Model (i.e. makes it empty)
Click ()  /WoW API/  method of Button\n  Execute the click action of the button.
CopyFontObject (otherFont)  /WoW API/  method of Font\n  Set this Font's attributes to be a copy of the otherFont font object's.
CreateFontString (["name"[,"layer"[,"inheritsFrom"]]])  /WoW API/  method of Frame\n  Create and return a new FontString as a child of this Frame - Can instantiate virtuals in 1.11.
CreateTexture (["name"[,"layer"]][,"inheritsFrom"])  /WoW API/  method of Frame\n  Create and return a new Texture as a child of this Frame - Can instantiate virtuals in 1.11.
CreateTitleRegion ()  /WoW API/  method of Frame\n  Create a title region for the frame if it does not have one. - New in 1.11
CycleVariation (variationIndex, delta)  /WoW API/  method of TabardModel
Disable ()  /WoW API/  method of Button\n  Disable the Button so that it cannot be clicked.
DisableDrawLayer ("layer")  /WoW API/  method of Frame\n  Disable rendering of "regions" (fontstrings, textures) in the specified draw layer.
Dress ()  /WoW API/  method of DressUpModel\n  Set the model to reflect the character's current inventory.
Enable ()  /WoW API/  method of Button\n  Enable to the Button so that it may be clicked.
EnableDrawLayer ("layer")  /WoW API/  method of Frame\n  Enable rendering of "regions" (fontstrings, textures) in the specified draw layer.
EnableKeyboard (enableFlag)  /WoW API/  method of Frame\n  Set whether this frame will get keyboard input. PROTECTED as of 2.0
EnableMouse (enableFlag)  /WoW API/  method of Frame\n  Set whether this frame will get mouse input. PROTECTED as of 2.0
EnableMouseWheel (enableFlag)  /WoW API/  method of Frame\n  Set whether this frame will get mouse wheel notifications. PROTECTED as of 2.0
FadeOut ()  /WoW API/  method of GameTooltip
GetAlpha ()  /WoW API/  method of UIObject\n  Return this object's alpha (transparency) value.
GetAltArrowKeyMode ()  /WoW API/  method of EditBox\n  Return whether only alt+arrow keys work for navigating the edit box, not arrow keys alone.
GetAnchorType ()  /WoW API/  method of GameTooltip\n  Returns the current anchoring type.
GetBackdrop ()  /WoW API/  method of Frame\n  Creates and returns a backdrop table suitable for use in SetBackdrop - New in 1.11.
GetBackdropBorderColor ()  /WoW API/  method of Frame\n  Gets the frame's backdrop border color (r, g, b, a)- New in 1.11.
GetBackdropColor ()  /WoW API/  method of Frame\n  Gets the frame's backdrop color (r, g, b, a)- New in 1.11.
GetBlendMode ()  /WoW API/  method of Texture\n  Return the blend mode set by SetBlendMode()
GetBlinkSpeed ()  /WoW API/  method of EditBox\n  Gets the blink speed of the EditBox in seconds - New in 1.11.
GetBottom ()  /WoW API/  method of Region\n  Get the y location of the bottom edge of this frame - Moved in 1.10.
GetButtonState ()  /WoW API/  method of Button\n  Return the current state ("PUSHED","NORMAL") of the Button.
GetCenter ()  /WoW API/  method of Region\n  Get the coordinates of the center of this frame - Moved in 1.10.
GetChecked ()  /WoW API/  method of CheckButton\n  Get the status of the checkbox.
GetCheckedTexture ()  /WoW API/  method of CheckButton\n  Get the texture used for a checked box - New in 1.11.
GetChildren ()  /WoW API/  method of Frame\n  Get the list of "children" (frames and things derived from frames) of this frame.
GetColorHSV ()  /WoW API/  method of ColorSelect\n  Get the HSV values of the selected color.
GetColorRGB ()  /WoW API/  method of ColorSelect\n  Get the RGB values of the selected color.
GetColorValueTexture ()  /WoW API/  method of ColorSelect\n  Get the texture used to show color value - new in 1.11.
GetColorValueThumbTexture ()  /WoW API/  method of ColorSelect\n  Get the texture for the color value thumb - New in 1.11.
GetColorWheelTexture ()  /WoW API/  method of ColorSelect\n  Get the texture for the color wheel - New in 1.11.
GetColorWheelThumbTexture ()  /WoW API/  method of ColorSelect\n  Get the texture for the color wheel thumb - New in 1.11.
GetCurrentLine ()  /WoW API/  method of ScrollingMessageFrame\n  Returns the line number that was printed last, starting from 0.
GetCurrentScroll ()  /WoW API/  method of ScrollingMessageFrame\n  Returns the amount of messages from the end message (GetNumMessages()) that the user has scrolled.
GetDisabledCheckedTexture ()  /WoW API/  method of CheckButton\n  Get the texture used for a disabled checked box - New in 1.11.
GetDisabledFontObject ()  /WoW API/  method of Button\n  Return the font object for the Button when disabled - New in 1.10.
GetDisabledTextColor ()  /WoW API/  method of Button\n  Get the color of this button's text when disabled (r, g, b, a) - New in 1.11.
GetDisabledTexture ()  /WoW API/  method of Button\n  Get the texture for this button when disabled - New in 1.11.
GetDrawLayer ()  /WoW API/  method of LayeredRegion\n  Returns the draw layer for the Region - New in 1.10.
GetEffectiveScale ()  /WoW API/  method of Frame\n  Get the scale factor of this object relative to the root window.
GetFacing ()  /WoW API/  method of Model\n  Returns the direction the model is facing.
GetFadeDuration ()  /WoW API/  method of MessageFrame\n  Gets the fade duration in seconds - New in 1.11.
GetFadeDuration ()  /WoW API/  method of ScrollingMessageFrame
GetFading ()  /WoW API/  method of MessageFrame\n  Get whether the frame is fading - New in 1.11.
GetFading ()  /WoW API/  method of ScrollingMessageFrame
GetFogColor ()  /WoW API/  method of Model\n  Gets the fog color (r, g, b, a) - New in 1.11.
GetFogFar ()  /WoW API/  method of Model\n  Gets the fog far distance - New in 1.11.
GetFogNear ()  /WoW API/  method of Model\n  Gets the fog near distance - New in 1.11.
GetFont ()  /WoW API/  method of Button\n  Returns the font, size, and flags currently used for display on the Button.
GetFont ()  /WoW API/  method of FontInstance\n  Return the font file, height, and flags.
GetFont (["element"])  /WoW API/  method of SimpleHTML
GetFontObject ()  /WoW API/  method of FontInstance\n  Return the 'parent' Font object, or nil if none.
GetFontObject (["element"])  /WoW API/  method of SimpleHTML
GetFontString ()  /WoW API/  method of Button\n  Get this button's label FontString - New in 1.11.
GetFrameLevel ()  /WoW API/  method of Frame\n  Get the level of this frame.
GetFrameStrata ()  /WoW API/  method of Frame\n  Get the strata of this frame.
GetFrameType ()  /WoW API/  method of Frame\n  Get the type of this frame.
GetHeight ()  /WoW API/  method of Region\n  Get the height of this object.
GetHighlightFontObject ()  /WoW API/  method of Button\n  Return the font object for the Button when highlighted - New in 1.10.
GetHighlightTextColor ()  /WoW API/  method of Button\n  Get the color of this button's text when highlighted (r, g, b, a) - New in 1.11.
GetHighlightTexture ()  /WoW API/  method of Button\n  Get the texture for this button when highlighted - New in 1.11.
GetHistoryLines ()  /WoW API/  method of EditBox\n  Get the number of history lines for this edit box
GetHitRectInsets ()  /WoW API/  method of Frame\n  Gets the frame's hit rectangle inset distances (l, r, t, b) - new in 1.11.
GetHorizontalScroll ()  /WoW API/  method of ScrollFrame
GetHorizontalScrollRange ()  /WoW API/  method of ScrollFrame
GetHyperlinkFormat ()  /WoW API/  method of SimpleHTML\n  Set the string.format format to use for displaying hyperlinks - New in 1.11.
GetID ()  /WoW API/  method of Frame\n  Get the ID of this frame.
GetInputLanguage ()  /WoW API/  method of EditBox\n  Get the input language (locale based not in-game)
GetInsertMode ()  /WoW API/  method of MessageFrame\n  Get the insert mode for the frame - New in 1.11.
GetJustifyH ()  /WoW API/  method of FontInstance\n  Return the horizontal text justification.
GetJustifyH (["element"])  /WoW API/  method of SimpleHTML
GetJustifyV ()  /WoW API/  method of FontInstance\n  Return thevertical text justification.
GetJustifyV (["element"])  /WoW API/  method of SimpleHTML
GetLeft ()  /WoW API/  method of Region\n  Get the x location of the left edge of this frame - Moved in 1.10.
GetLight ()  /WoW API/  method of Model\n  Gets the light specification for the model, returns a list of results compatible with the SetLight method - New in 1.11.
GetLowerBackgroundFileName ()  /WoW API/  method of TabardModel
GetLowerEmblemFileName ()  /WoW API/  method of TabardModel
GetLowerEmblemTexture ("textureName")  /WoW API/  method of TabardModel
GetMaxBytes ()  /WoW API/  method of EditBox\n  Gets the maximum number bytes allowed in the EditBox - New in 1.11.
GetMaxLetters ()  /WoW API/  method of EditBox\n  Gets the maximum number of letters allowed in the EditBox - New in 1.11.
GetMaxLines ()  /WoW API/  method of ScrollingMessageFrame\n  Get the maximum number of lines the frame can display.
GetMaxResize ()  /WoW API/  method of Frame\n  Gets the frame's maximum allowed resize bounds (w, h) - new in 1.11.
GetMinMaxValues ()  /WoW API/  method of Slider\n  Get the current bounds of the slider.
GetMinMaxValues ()  /WoW API/  method of StatusBar\n  Get the current bounds of the bar.
GetMinResize ()  /WoW API/  method of Frame\n  Gets the frame's minimum allowed resize bounds (w, h) - new in 1.11.
GetModel ()  /WoW API/  method of Model\n  Gets the model file for this Model - New in 1.11.
GetModelScale ()  /WoW API/  method of Model\n  Returns the current mesh scaling factor.
GetName ()  /WoW API/  method of UIObject\n  Return the name of the object.
GetNormalTexture ()  /WoW API/  method of Button\n  Get the normal texture for this button - New in 1.11.
GetNumChildren ()  /WoW API/  method of Frame\n  Get the number of "children" (frames and things derived from frames) this frame has.
GetNumLetters ()  /WoW API/  method of EditBox\n  Gets the number of letters in the box.
GetNumLinesDisplayed ()  /WoW API/  method of ScrollingMessageFrame
GetNumMessages ()  /WoW API/  method of ScrollingMessageFrame
GetNumPoints ()  /WoW API/  method of Region\n  Get the number of anchor points for this frame - New in 1.10.
GetNumRegions ()  /WoW API/  method of Frame\n  Return the number of "regions" (fontstrings, textures) belonging to this frame.
GetNumber ()  /WoW API/  method of EditBox
GetObjectType ()  /WoW API/  method of UIObject\n  Get the type of this object.
GetOrientation ()  /WoW API/  method of Slider\n  Returns "HORIZONTAL" or "VERTICAL".
GetOrientation ()  /WoW API/  method of StatusBar
GetParent ()  /WoW API/  method of Region\n  Get the parent of this frame (The object, not just the name) - Moved in 1.10.
GetPingPosition ()  /WoW API/  method of Minimap\n  Get the last ping location.
GetPoint (pointNum)  /WoW API/  method of Region\n  Get details for an anchor point for this frame (point, relativeTo, relativePoint, xofs, yofs) - New in 1.10.
GetPosition ()  /WoW API/  method of Model\n  Returns the current position of the mesh as x, y, z
GetPushedTextOffset ()  /WoW API/  method of Button\n  Get the text offset when this button is pushed (x, y) - New in 1.11.
GetPushedTexture ()  /WoW API/  method of Button\n  Get the texture for this button when pushed - New in 1.11.
GetRegions ()  /WoW API/  method of Frame\n  Return the "regions" (fontstrings, textures) of the frame (multiple return values) belonging to this frame.
GetRight ()  /WoW API/  method of Region\n  Get the x location of the right edge of this frame - Moved in 1.10.
GetScale ()  /WoW API/  method of Frame\n  Get the scale factor of this object relative to its parent.
GetScript ("handler")  /WoW API/  method of Frame\n  Get the function for one of this frame's handlers.
GetScrollChild ()  /WoW API/  method of ScrollFrame
GetShadowColor ()  /WoW API/  method of FontInstance\n  Returns the color of text shadow (r, g, b, a).
GetShadowColor (["element"])  /WoW API/  method of SimpleHTML
GetShadowOffset ()  /WoW API/  method of FontInstance\n  Returns the text shadow offset (x, y).
GetShadowOffset (["element"])  /WoW API/  method of SimpleHTML
GetSpacing ()  /WoW API/  method of FontInstance\n  Returns the text spacing.
GetSpacing (["element"])  /WoW API/  method of SimpleHTML
GetStatusBarColor ()  /WoW API/  method of StatusBar
GetStatusBarTexture ()  /WoW API/  method of StatusBar\n  Returns the texture object for the bar - Before 1.11 it returned the filename.
GetStringWidth ()  /WoW API/  method of FontString\n  Returns the width in pixels of the current string in the current font (without line wrapping).
GetTexCoord ()  /WoW API/  method of Texture\n  Gets the 8 texture coordinates that map to the Texture's corners - New in 1.11.
GetTexCoordModifiesRect ()  /WoW API/  method of Texture\n  Get the SetTexCoordModifiesRect setting - New in 1.11
GetText ()  /WoW API/  method of Button\n  Get the text label for the Button.
GetText ()  /WoW API/  method of EditBox\n  Get the current text contained in the edit box.
GetText ()  /WoW API/  method of FontString\n  Get the displayed text.
GetTextColor ()  /WoW API/  method of Button\n  Get the normal color of this button's text (r, g, b, a) - New in 1.11.
GetTextColor ()  /WoW API/  method of FontInstance\n  Returns the default text color.
GetTextColor (["element"])  /WoW API/  method of SimpleHTML
GetTextFontObject ()  /WoW API/  method of Button\n  Return the font object for the Button's normal text - New in 1.10.
GetTextHeight ()  /WoW API/  method of Button\n  Get the height of the Button's text.
GetTextInsets ()  /WoW API/  method of EditBox\n  Gets the text display insets for the EditBox - New in 1.11.
GetTextWidth ()  /WoW API/  method of Button\n  Get the width of the Button's text.
GetTexture ()  /WoW API/  method of Texture\n  Gets this texture's current texture path.
GetThumbTexture ()  /WoW API/  method of Slider\n  Get the texture for this slider's thumb - New in 1.11.
GetTimeVisible ()  /WoW API/  method of MessageFrame\n  Get the message visibility time in seconds - New in 1.11.
GetTimeVisible ()  /WoW API/  method of ScrollingMessageFrame
GetTitleRegion ()  /WoW API/  method of Frame\n  Return the frame's title region - New in 1.11.
GetTop ()  /WoW API/  method of Region\n  Get the y location of the top edge of this frame - Moved in 1.10.
GetUpperBackgroundFileName ()  /WoW API/  method of TabardModel
GetUpperEmblemFileName ()  /WoW API/  method of TabardModel
GetUpperEmblemTexture ("textureName")  /WoW API/  method of TabardModel
GetValue ()  /WoW API/  method of Slider,StatusBar\n  Get the current value of the bar/slider.
GetValueStep ()  /WoW API/  method of Slider\n  Get the current step size of the slider.
GetVertexColor ()  /WoW API/  method of Texture\n  Gets the vertex color for the Texture.
GetVerticalScroll ()  /WoW API/  method of ScrollFrame
GetVerticalScrollRange ()  /WoW API/  method of ScrollFrame
GetWidth ()  /WoW API/  method of Region\n  Get the width of this object.
GetZoom ()  /WoW API/  method of Minimap\n  Get the current zoom level.
GetZoomLevels ()  /WoW API/  method of Minimap\n  Get the maximum zoom level.
HasScript ("handler")  /WoW API/  method of Frame\n  Return true if the frame can be given a handler of the specified type (NOT whether it actually HAS one, use GetScript for that) - Since 1.8.
Hide ()  /WoW API/  method of Region\n  Set this object to hidden (it and all of its children will disappear).
HighlightText ([startPos, endPos])  /WoW API/  method of EditBox\n  Set the highlight to all or some of the edit box text.
InitializeTabardColors ()  /WoW API/  method of TabardModel
Insert ("text")  /WoW API/  method of EditBox\n  Insert text into the edit box.
IsAutoFocus ()  /WoW API/  method of EditBox\n  Determine if the EditBox has autofocus enabled - New in 1.11.
IsClampedToScreen ()  /WoW API/  method of Frame\n  Gets whether the frame is prohibited from being dragged off screen - New in 1.11.
IsDesaturated ()  /WoW API/  method of Texture\n  Gets the desaturation state of this Texture. - New in 1.11
IsEnabled ()  /WoW API/  method of Button\n  Determine whether the Button is enabled.
IsFrameType ("type")  /WoW API/  method of Frame\n  Determine if this frame is of the specified type, or a subclass of that type.
IsKeyboardEnabled ()  /WoW API/  method of Frame\n  Get whether this frame will get keyboard input. - New in 1.11.
IsMouseEnabled ()  /WoW API/  method of Frame\n  Get whether this frame will get mouse input. - New in 1.11.
IsMouseWheelEnabled ()  /WoW API/  method of Frame\n  Get whether this frame will get mouse wheel notifications. New in 1.11.
IsMovable ()  /WoW API/  method of Frame\n  Determine if the frame can be moved.
IsMultiLine ()  /WoW API/  method of EditBox\n  Determine if the EditBox accepts multiple lines - New in 1.11.
IsNumeric ()  /WoW API/  method of EditBox\n  Determine if the EditBox only accepts numeric input - New in 1.11.
IsObjectType ("type")  /WoW API/  method of UIObject\n  Determine if this object is of the specified type, or a subclass of that type.
IsOwned (frame)  /WoW API/  method of GameTooltip\n  Returns true if the tooltip is currently owned by the specified frame - Since 1.8.
IsPassword ()  /WoW API/  method of EditBox\n  Determine if the EditBox performs password masking - New in 1.11.
IsProtected ()  /WoW API/  method of Region\n  Determine if this object can be manipulated in certain ways by tainted code in combat or not
IsResizable ()  /WoW API/  method of Frame\n  Determine if the frame can be resized.
IsShown ()  /WoW API/  method of Region\n  Determine if this object is shown (would be visible if its parent was visible).
IsToplevel ()  /WoW API/  method of Frame\n  Get whether the frame is set as toplevel - New in 1.10.2.
IsUserPlaced ()  /WoW API/  method of Frame\n  Determine if this frame has been relocated by the user.
IsVisible ()  /WoW API/  method of Region\n  Get whether the object is visible on screen (logically (IsShown() and GetParent():IsVisible()));
LockHighlight ()  /WoW API/  method of Button\n  Set the Button to always be drawn highlighted.
Lower ()  /WoW API/  method of Frame\n  Lower this frame behind other frames.
NumLines ()  /WoW API/  method of GameTooltip\n  Get the number of lines in the tooltip.
PageDown ()  /WoW API/  method of ScrollingMessageFrame
PageUp ()  /WoW API/  method of ScrollingMessageFrame
PingLocation (x, y)  /WoW API/  method of Minimap\n  Perform a ping at the specified location.
Raise ()  /WoW API/  method of Frame\n  Raise this frame above other frames.
RefreshUnit ()  /WoW API/  method of PlayerModel
RegisterAllEvents ()  /WoW API/  method of Frame\n  Register this frame to receive all events (For debugging purposes only!) - New in 1.11.
RegisterEvent ("event")  /WoW API/  method of Frame\n  Indicate that this frame should be notified when event occurs.
RegisterForClicks("clickType"[,"clickType"...])  method of Button\n  Specify which mouse button up/down actions cause this button to receive an OnClick notification.
RegisterForDrag("buttonType"[,"buttonType"...])  method of Frame\n  Inidicate that this frame should be notified of drag events for the specified buttons.
ReplaceIconTexture ("texture")  /WoW API/  method of Model
Save ()  /WoW API/  method of TabardModel\n  Save the tabard.
ScrollDown ()  /WoW API/  method of ScrollingMessageFrame
ScrollToBottom ()  /WoW API/  method of ScrollingMessageFrame
ScrollToTop ()  /WoW API/  method of ScrollingMessageFrame
ScrollUp ()  /WoW API/  method of ScrollingMessageFrame
SetAction (slot)  /WoW API/  method of GameTooltip\n  Shows the tooltip for the specified action button.
SetAllPoints (frame or "frameName")  /WoW API/  method of Region\n  Set all anchors to match edges of specified frame - Moved in 1.10.
SetAlpha (alpha)  /WoW API/  method of UIObject\n  Set the object's alpha (transparency) value.
SetAlphaGradient (start, length)  /WoW API/  method of FontString\n  Create or remove an alpha gradient over the text.
SetAltArrowKeyMode (enable)  /WoW API/  method of EditBox\n  Make only alt+arrow keys work for navigating the edit box, not arrow keys alone.
SetArrowModel ("file")  /WoW API/  method of Minimap\n  Set the file to use for the arrow model - New in 1.11.
SetAuctionCompareItem ("type", index[, offset])  /WoW API/  method of GameTooltip
SetAuctionItem ("type", index)  /WoW API/  method of GameTooltip\n  Shows the tooltip for the specified auction item.
SetAuctionSellItem ()  /WoW API/  method of GameTooltip
SetAutoFocus (state)  /WoW API/  method of EditBox\n  Set whether or not the editbox will attempt to get input focus when it gets shown (default: yes) - New in 1.11.
SetBackdrop ([backdropTable])  /WoW API/  method of Frame\n  Set the backdrop of the frame according to the specification provided.
SetBackdropBorderColor (r, g, b[, a])  /WoW API/  method of Frame\n  Set the frame's backdrop's border's color.
SetBackdropColor (r, g, b[, a])  /WoW API/  method of Frame\n  Set the frame's backdrop color.
SetBagItem (bag, slot)  /WoW API/  method of GameTooltip
SetBlendMode ("mode")  /WoW API/  method of Texture\n  Set the alphaMode of the texture.
SetBlinkSpeed ()  /WoW API/  method of EditBox
SetBlipTexture ()  /WoW API/  method of Minimap\n  Set the file to use for blips (ObjectIcons)
SetButtonState ("state"[, lock])  /WoW API/  method of Button\n  Set the state of the Button ("PUSHED", "NORMAL") and whether it is locked.
SetBuybackItem ()  /WoW API/  method of GameTooltip
SetCamera (index)  /WoW API/  method of Model\n  Select a pre-defined camera.
SetChecked ([state])  /WoW API/  method of CheckButton\n  Set the status of the checkbox.
SetCheckedTexture (texture)  /WoW API/  method of CheckButton\n  Set the texture to use for a checked box.
SetClampedToScreen (clamped)  /WoW API/  method of Frame\n  Set whether the frame is prohibited from being dragged off screen - New in 1.11.
SetColorHSV (h, s, v)  /WoW API/  method of ColorSelect\n  Set to a specific HSV color.
SetColorRGB (r, g, b)  /WoW API/  method of ColorSelect\n  Set to a specific RGB color.
SetColorValueTexture (texture or nil)  /WoW API/  method of ColorSelect\n  Set the texture used to show color value - New in 1.11.
SetColorValueThumbTexture (texture or "texture" or nil)  /WoW API/  method of ColorSelect\n  Set the texture for the color value thumb - New in 1.11.
SetColorWheelTexture (texture or nil)  /WoW API/  method of ColorSelect\n  Set the texture for the color wheel - New in 1.11.
SetColorWheelThumbTexture (texture or "texture" or nil)  /WoW API/  method of ColorSelect\n  Set the texture for the color wheel thumb - New in 1.11.
SetCooldown (Start, Duration)  /WoW API/  method of Cooldown
SetCraftItem ()  /WoW API/  method of GameTooltip
SetCraftSpell ()  /WoW API/  method of GameTooltip
SetDesaturated (flag)  /WoW API/  method of Texture\n  Set whether this texture should be displayed with no saturation (Note: This has a return value)
SetDisabledCheckedTexture (texture)  /WoW API/  method of CheckButton\n  Set the texture to use for a disabled but checked box.
SetDisabledFontObject ([font])  /WoW API/  method of Button\n  Set the font object for settings when disabled - New in 1.10.
SetDisabledTextColor (r, g, b[, a])  /WoW API/  method of Button\n  Set the disabled text color for the Button.
SetDisabledTexture (texture or "texturePath")  /WoW API/  method of Button\n  Set the disabled texture for the Button - Updated in 1.10.
SetDrawLayer ("layer")  /WoW API/  method of LayeredRegion\n  Sets the draw layer for the Region - New in 1.10.
SetFacing (facing)  /WoW API/  method of Model\n  Set the direction that the model is facing.
SetFadeDuration (seconds)  /WoW API/  method of MessageFrame\n  Set the fade duration - New in 1.11.
SetFadeDuration (seconds)  /WoW API/  method of ScrollingMessageFrame\n  Set the fade duration.
SetFading (status)  /WoW API/  method of MessageFrame\n  Set whether the frame fades messages - New in 1.11.
SetFading ([isEnabled])  /WoW API/  method of ScrollingMessageFrame\n  Set whether fading is enabled - Renamed in 1.11.
SetFocus ()  /WoW API/  method of EditBox\n  Move input focus (the cursor) to this editbox
SetFogColor (r, g, b[, a])  /WoW API/  method of Model\n  Set the fog color and enable fogging.
SetFogFar (value)  /WoW API/  method of Model\n  Set the far-clipping plane distance for fogging.
SetFogNear (value)  /WoW API/  method of Model\n  Set the near-clipping plane distance for fogging.
SetFont ("font", size[, "flags"])  /WoW API/  method of Button\n  Set the font to use for display.
SetFont ("path", height[, "flags"])  /WoW API/  method of FontInstance\n  Sets the font to use for text, returns 1 if the path was valid, nil otherwise (no change occurs).
SetFont (["element",] "path", height[, "flags"])  /WoW API/  method of SimpleHTML
SetFontObject (fontObject)  /WoW API/  method of FontInstance\n  Sets the 'parent' Font object from which this object inherits properties.
SetFontObject (["element",] fontObject)  /WoW API/  method of SimpleHTML
SetFontString (fontString)  /WoW API/  method of Button\n  Set the button's label FontString - New in 1.11.
SetFrameLevel (level)  /WoW API/  method of Frame\n  Set the level of this frame (determines which of overlapping frames shows on top).
SetFrameStrata ("strata")  /WoW API/  method of Frame\n  Set the strata of this frame.
SetGradient ("orientation", minR, minG, minB, maxR, maxG, maxB)  /WoW API/  method of Texture
SetGradientAlpha ("orientation", minR, minG, minB, minA, maxR, maxG, maxB, maxA)  /WoW API/  method of Texture
SetHeight (height)  /WoW API/  method of Region\n  Set the height of the object.
SetHighlightFontObject ([font])  /WoW API/  method of Button\n  Set the font object for settings when highlighted - New in 1.10.
SetHighlightTextColor (r, g, b[, a])  /WoW API/  method of Button\n  Set the highlight text color for the Button.
SetHighlightTexture (texture or "texturePath")  /WoW API/  method of Button\n  Set the highlight texture for the Button - Updated in 1.10.
SetHistoryLines ()  /WoW API/  method of EditBox\n  Set the number of history lines to remember.
SetHitRectInsets (left, right, top, bottom)  /WoW API/  method of Frame\n  Set the inset distances for the frame's hit rectangle - New in 1.11.
SetHorizontalScroll (offset)  /WoW API/  method of ScrollFrame
SetHyperlink (link)  /WoW API/  method of GameTooltip\n  Changes the item which is displayed in the tooltip according to the passed link.
SetHyperlinkFormat ("format")  /WoW API/  method of SimpleHTML\n  Set the string.format format to use for displaying hyperlinks.
SetID (id)  /WoW API/  method of Frame\n  Set the ID of this frame.
SetIconTexture ()  /WoW API/  method of Minimap
SetInboxItem (index)  /WoW API/  method of GameTooltip\n  Shows the tooltip for the specified mail inbox item.
SetInsertMode ("TOP" or "BOTTOM")  /WoW API/  method of MessageFrame\n  Set where new messages are inserted - New in 1.11.
SetInventoryItem (unit, slot[, nameOnly])  /WoW API/  method of GameTooltip
SetJustifyH ("justifyH")  /WoW API/  method of FontInstance\n  Sets horizontal text justification ("LEFT","RIGHT", or "CENTER")
SetJustifyH (["element",] "justifyH")  /WoW API/  method of SimpleHTML
SetJustifyV ("justifyV")  /WoW API/  method of FontInstance\n  Sets vertical text justification ("TOP","BOTTOM", or "MIDDLE")
SetJustifyV (["element",] "justifyV")  /WoW API/  method of SimpleHTML
SetLight (enabled[, omni, dirX, dirY, dirZ, ambIntensity[, ambR, ambG, ambB[, dirIntensity[, dirR, dirG, dirB]]]])  /WoW API/  method of Model\n  Place the light source used for rendering
SetLootItem ()  /WoW API/  method of GameTooltip
SetLootRollItem (id)  /WoW API/  method of GameTooltip\n  Shows the tooltip for the specified loot roll item.
SetMaskTexture ()  /WoW API/  method of Minimap
SetMaxBytes (maxBytes)  /WoW API/  method of EditBox\n  Set the maximum byte size for entered text.
SetMaxLetters (maxLetters)  /WoW API/  method of EditBox\n  Set the maximum number of letters for entered text.
SetMaxLines (lines)  /WoW API/  method of ScrollingMessageFrame\n  Set the maximum number of displayed lines. Tested successfully with values up to a million. Resets the messages already within the frame.
SetMaxResize (maxWidth, maxHeight)  /WoW API/  method of Frame\n  Set the maximum dimensions this frame can be resized to.
SetMerchantCompareItem ("slot"[, offset])  /WoW API/  method of GameTooltip
SetMerchantItem ()  /WoW API/  method of GameTooltip
SetMinMaxValues (min, max)  /WoW API/  method of Slider,StatusBar\n  Set the bounds of the bar/slider.
SetMinResize (minWidth, minHeight)  /WoW API/  method of Frame\n  Set the minimum dimensions this frame can be resized to.
SetMinimumWidth (width)  /WoW API/  method of GameTooltip\n  (Formerly SetMoneyWidth)
SetModel ("file")  /WoW API/  method of Model\n  Set the mesh that is displayed in the frame.
SetModelScale (scale)  /WoW API/  method of Model\n  Sets the scale factor for the mesh before rendering.
SetMovable (isMovable)  /WoW API/  method of Frame\n  Set whether the frame can be moved.
SetMultiLine (state)  /WoW API/  method of EditBox\n  Set the EditBox's multi-line state - New in 1.11.
SetNonSpaceWrap (wrapFlag)  /WoW API/  method of FontString\n  Set whether long strings without spaces are wrapped or truncated.
SetNormalTexture (texture or "texturePath")  /WoW API/  method of Button\n  Set the normal texture for the Button - Updated in 1.10.
SetNumber (number)  /WoW API/  method of EditBox
SetNumeric (state)  /WoW API/  method of EditBox\n  Set if the EditBox only accepts numeric input - New in 1.11.
SetOrientation ("orientation")  /WoW API/  method of Slider\n  "HORIZONTAL" or "VERTICAL".
SetOrientation ()  /WoW API/  method of StatusBar
SetOwner(owner, "anchor"[, +x, +y])  method of GameTooltip
SetPadding ()  /WoW API/  method of GameTooltip
SetParent (parent or "parentName")  /WoW API/  method of Region\n  Set the parent for this frame - Moved in 1.10.
SetPassword (state)  /WoW API/  method of EditBox\n  Set the EditBox's password masking state - New in 1.11.
SetPetAction (slot)  /WoW API/  method of GameTooltip\n  Shows the tooltip for the specified pet action.
SetPlayerBuff (buffIndex)  /WoW API/  method of GameTooltip\n  Direct the tooltip to show information about a player's buff.
SetPlayerModel ("file")  /WoW API/  method of Minimap\n  Set the file to use for the player model - New in 1.11.
SetPoint ("point","relativeFrame" or relativeObject,"relativePoint"[, xOfs, yOfs])  /WoW API/  method of Region\n  Set an attachment point of this object - Updated in 1.10.
SetPosition (x, y, z)  /WoW API/  method of Model\n  Set the position of the mesh inside the frame's coordinate system.
SetPushedTextOffset (x, y)  /WoW API/  method of Button\n  Set the text offset for this button when pushed - New in 1.11.
SetPushedTexture (texture or "texturePath")  /WoW API/  method of Button\n  Set the pushed texture for the Button - Updated in 1.10.
SetQuestItem ()  /WoW API/  method of GameTooltip
SetQuestLogItem ()  /WoW API/  method of GameTooltip
SetQuestLogRewardSpell ()  /WoW API/  method of GameTooltip
SetQuestRewardSpell ()  /WoW API/  method of GameTooltip
SetResizable (isResizable)  /WoW API/  method of Frame\n  Set whether the frame can be resized.
SetRotation (rotationRadians)  /WoW API/  method of PlayerModel
SetScale (scale)  /WoW API/  method of Frame\n  Set the scale factor of this frame relative to its parent.
SetScript ("handler", function)  /WoW API/  method of Frame\n  Set the function to use for a handler on this frame.
SetScrollChild ()  /WoW API/  method of ScrollFrame
SetScrollFromBottom ()  /WoW API/  method of ScrollingMessageFrame
SetSendMailItem ()  /WoW API/  method of GameTooltip
SetSequence (sequence)  /WoW API/  method of Model\n  Set the animation to be played.
SetSequenceTime (sequence, time)  /WoW API/  method of Model
SetShadowColor (r, g, b[, a])  /WoW API/  method of FontInstance\n  Sets the text shadow color.
SetShadowColor (["element",] r, g, b[, a])  /WoW API/  method of SimpleHTML
SetShadowOffset (x, y)  /WoW API/  method of FontInstance\n  Sets the text shadow offset.
SetShadowOffset (["element",] x, y)  /WoW API/  method of SimpleHTML
SetShapeshift (slot)  /WoW API/  method of GameTooltip\n  Shows the tooltip for the specified shapeshift form.
SetSlot (index)  /WoW API/  method of LootButton\n  Set which the item to loot if the button is clicked.
SetSpacing (["element",] lineSpacing)  /WoW API/  method of SimpleHTML
SetSpacing (spacing)  /WoW API/  method of FontInstance\n  Sets the spacing between lines of text in the object.
SetSpell (spellId, bookType)  /WoW API/  method of GameTooltip\n  Shows the tooltip for the specified spell.
SetStatusBarColor (r, g, b[, alpha])  /WoW API/  method of StatusBar\n  Set the color of the bar.
SetStatusBarTexture ("file" or texture[,"layer"])  /WoW API/  method of StatusBar\n  Sets the texture of the bar - Added texture as valid arg in 1.11.
SetTalent (tabIndex, talentIndex)  /WoW API/  method of GameTooltip\n  Shows the tooltip for the specified talent.
SetTexCoord (minX, maxX, minY, maxY or ULx, ULy, LLx, LLy, URx, URy, LRx, LRy)  /WoW API/  method of Texture\n  Set the corner coordinates for texture display.
SetTexCoordModifiesRect (enableFlag)  /WoW API/  method of Texture\n  Set whether future SetTexCoord operations should modify the display rectangle rather than stretch the texture. - New in 1.11
SetText ("text")  /WoW API/  method of Button\n  Set the text label for the Button.
SetText ("text")  /WoW API/  method of EditBox\n  Set the text contained in the edit box.
SetText ("text")  /WoW API/  method of FontString\n  Set the displayed text.
SetText ("text")  /WoW API/  method of SimpleHTML\n  Set the HTML markup to be displayed (note: if there is any markup error, it will be displayed as plain text)
SetText ("text", r, g, b[, alphaValue[, textWrap]])  /WoW API/  method of GameTooltip\n  Set the text of the tooltip.
SetTextColor (r, g, b)  /WoW API/  method of Button\n  Set the text color for the Button.
SetTextColor (r, g, b[, a])  /WoW API/  method of FontInstance\n  Sets the default text color.
SetTextColor (["element",] r, g, b[, a])  /WoW API/  method of SimpleHTML
SetTextFontObject ([font])  /WoW API/  method of Button\n  Set the font object from which to get settings for this Button's normal state - New in 1.10.
SetTextHeight (pixelHeight)  /WoW API/  method of FontString\n  Set the height of the text by scaling graphics (Note: Can distort text).
SetTextInsets (l, r, t, b)  /WoW API/  method of EditBox
SetTexture ("texturePath" or r, g, b[, a])  /WoW API/  method of Texture\n  Sets the texture to be displayed from a file or to a solid color.
SetThumbTexture (texture or "texturePath")  /WoW API/  method of Slider
SetTimeVisible (seconds)  /WoW API/  method of MessageFrame\n  Sets the message visibility time - New in 1.11.
SetTimeVisible (seconds)  /WoW API/  method of ScrollingMessageFrame\n  Sets how long lines remain visible.
SetToplevel (isTopLevel)  /WoW API/  method of Frame\n  Set whether the frame should raise itself when clicked - New in 1.10.2.
SetTrackingSpell ()  /WoW API/  method of GameTooltip
SetTradePlayerItem ()  /WoW API/  method of GameTooltip
SetTradeSkillItem ()  /WoW API/  method of GameTooltip
SetTradeTargetItem ()  /WoW API/  method of GameTooltip
SetTrainerService ()  /WoW API/  method of GameTooltip
SetUnit ("unitId")  /WoW API/  method of PlayerModel
SetUnit ()  /WoW API/  method of GameTooltip
SetUnitBuff ("unitId", buffIndex[, raidFilter])  /WoW API/  method of GameTooltip\n  Shows the tooltip for a unit's buff.
SetUnitDebuff ("unitId", buffIndex[, raidFilter])  /WoW API/  method of GameTooltip\n  Shows the tooltip for a unit's debuff.
SetUserPlaced (isUserPlaced)  /WoW API/  method of Frame\n  Set whether the frame has been relocated by the user (and will thus be saved in the layout cache).
SetValue (value)  /WoW API/  method of Slider\n  Set the value of the slider. Also causes the thumb to show on the first call.
SetValue (value)  /WoW API/  method of StatusBar\n  Set the value of the bar.
SetValueStep (value)  /WoW API/  method of Slider\n  Set the step size of the slider.
SetVertexColor (r, g, b[, alpha])  /WoW API/  method of LayeredRegion
SetVerticalScroll (offset)  /WoW API/  method of ScrollFrame
SetWidth (width)  /WoW API/  method of Region\n  Set the width of the object.
SetZoom (level)  /WoW API/  method of Minimap\n  Set the current zoom level.
Show ()  /WoW API/  method of Region\n  Set this object to shown (it will appear if its parent is visible).
StartMoving ()  /WoW API/  method of Frame\n  Start moving this frame.
StartSizing ("point")  /WoW API/  method of Frame\n  Start sizing this frame using the specified anchor point.
StopMovingOrSizing ()  /WoW API/  method of Frame\n  Stop moving and/or sizing this frame.
ToggleInputLanguage ()  /WoW API/  method of EditBox
TryOn ("item")  /WoW API/  method of DressUpModel\n  Add the specified item to the model.
Undress ()  /WoW API/  method of DressUpModel\n  Set the model to reflect the character without inventory.
UnlockHighlight ()  /WoW API/  method of Button\n  Set the Button to not always be drawn highlighted.
UnregisterAllEvents ()  /WoW API/  method of Frame\n  Indicate that this frame should no longer be notified when any events occur.
UnregisterEvent ("event")  /WoW API/  method of Frame\n  Indicate that this frame should no longer be notified when event occurs.
UpdateColorByID (id, r, g, b)  /WoW API/  method of ScrollingMessageFrame
UpdateScrollChildRect ()  /WoW API/  method of ScrollFrame
